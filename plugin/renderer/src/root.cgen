mod level_0;

struct LayoutCB {
    a: [Float1; 3],
    b: Float2,
    c: [Uint2; 2],
    d: [Half3; 1],
    e: [Half1; 1],
    f: [Half1; 2],
    g: Half1,
}

struct LayoutSB {
    a: [Float1; 3],
    b: Float2,
    c: [Uint2; 2],
    d: [Half3; 1],
    e: [Half1; 1],
    f: [Half1; 2],
    g: Half2,
}

struct LayoutSB2 {
    a: LayoutSB,
}

struct ViewData {
    view: Float4x4,
    projection: Float4x4,
}

struct PushConstantData {
    color: Float4,
}

#[DescriptorSet(frequency = 0)]
struct ViewDescriptorSet {
    view_data: ConstantBuffer<ViewData>,
}

#[DescriptorSet(frequency = 1, transient)]
struct FrameDescriptorSet {
    smp: Sampler,
    smp_arr: [Sampler; 10],
    cb: ConstantBuffer<LayoutCB>,
    #[Field(transient)]
    cb_tr: ConstantBuffer<LayoutCB>,
    sb: StructuredBuffer<LayoutSB>,
    sb2: StructuredBuffer<LayoutSB2>,
    sb_arr: [StructuredBuffer<LayoutSB>; 10],
    rw_sb: RWStructuredBuffer<LayoutSB>,
    bab: ByteAddressBuffer,
    rw_bab: RWByteAddressBuffer,
    tex2d: Texture2D<Float4>,
    rw_tex2d: RWTexture2D<Float4>,
    tex3d: Texture3D<Float4>,
    rw_tex3d: RWTexture3D<Float4>,
    tex2darr: Texture2DArray<Float4>,
    rw_tex2darr: RWTexture2DArray<Float4>,
    rw_texcube: TextureCube<Float4>,
    rw_texcubearr: TextureCubeArray<Float4>,
}

#[PipelineLayout]
struct TmpPipelineLayout {
    view_descriptor_set: DescriptorSet<ViewDescriptorSet>,
    push_constant: PushConstant<PushConstantData>,
}
