mod lighting;


struct CameraProps {
    view: Float4x4,
    projection: Float4x4,
    projection_view: Float4x4,
}

#[DescriptorSet(frequency = 0, transient)]
struct FrameDescriptorSet {
    sb_omni_lights: StructuredBuffer<OmnidirectionalLight>,
    sb_dir_lights: StructuredBuffer<DirectionalLight>,
    sb_spotlights: StructuredBuffer<Spotlight>,
}


#[DescriptorSet(frequency = 1)]
struct ViewDescriptorSet {
    camera: ConstantBuffer<CameraProps>,
}

struct PushConstantData {
    color: Float4,
}

#[PipelineLayout]
struct TmpPipelineLayout {
    frame_descriptor_set: DescriptorSet<FrameDescriptorSet>,
    view_descriptor_set: DescriptorSet<ViewDescriptorSet>,
    push_constant: PushConstant<PushConstantData>,
}
