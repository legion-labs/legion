mod lighting;

struct ViewData {
    view: Float4x4,
    inv_view: Float4x4,
    projection: Float4x4,
    inv_projection: Float4x4,
    projection_view: Float4x4,
    inv_projection_view: Float4x4,
    screen_size: Float4,
    cursor_pos: Float2,
}

struct ConstData {
    world: Float4x4,
    color: Float4,
    picking_distance: Float1,
}

#[DescriptorSet(frequency = 0, transient)]
struct FrameDescriptorSet {
    omni_lights: StructuredBuffer<OmnidirectionalLight>,
    dir_lights: StructuredBuffer<DirectionalLight>,
    spot_lights: StructuredBuffer<Spotlight>,
    static_buffer: ByteAddressBuffer,
}

#[DescriptorSet(frequency = 1)]
struct ViewDescriptorSet {
    camera: ConstantBuffer<ViewData>,
}

struct PushConstantData {
    color: Float4,
}

#[PipelineLayout]
struct TmpPipelineLayout {
    frame_descriptor_set: DescriptorSet<FrameDescriptorSet>,
    view_descriptor_set: DescriptorSet<ViewDescriptorSet>,
    push_constant: PushConstant<PushConstantData>,
}

struct EguiPushConstantData {
    scale: Float2,
    translation: Float2,
    width: Float1,
    height: Float1,
}
