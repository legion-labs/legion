#![allow(clippy::too_many_lines)]

#[cfg(feature = "vulkan")]
use ash::vk;

//TODO: Try using Some/None instead of UNDEFINED format

/// Describes the encoding of an image or buffer.
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
#[cfg_attr(feature = "serde-support", derive(Serialize, Deserialize))]
#[allow(non_camel_case_types)]
#[allow(clippy::upper_case_acronyms)]
pub enum Format {
    UNDEFINED,
    R4G4_UNORM_PACK8,
    R4G4B4A4_UNORM_PACK16,
    B4G4R4A4_UNORM_PACK16,
    R5G6B5_UNORM_PACK16,
    B5G6R5_UNORM_PACK16,
    R5G5B5A1_UNORM_PACK16,
    B5G5R5A1_UNORM_PACK16,
    A1R5G5B5_UNORM_PACK16,
    R8_UNORM,
    R8_SNORM,
    R8_USCALED,
    R8_SSCALED,
    R8_UINT,
    R8_SINT,
    R8_SRGB,
    R8G8_UNORM,
    R8G8_SNORM,
    R8G8_USCALED,
    R8G8_SSCALED,
    R8G8_UINT,
    R8G8_SINT,
    R8G8_SRGB,
    R8G8B8_UNORM,
    R8G8B8_SNORM,
    R8G8B8_USCALED,
    R8G8B8_SSCALED,
    R8G8B8_UINT,
    R8G8B8_SINT,
    R8G8B8_SRGB,
    B8G8R8_UNORM,
    B8G8R8_SNORM,
    B8G8R8_USCALED,
    B8G8R8_SSCALED,
    B8G8R8_UINT,
    B8G8R8_SINT,
    B8G8R8_SRGB,
    R8G8B8A8_UNORM,
    R8G8B8A8_SNORM,
    R8G8B8A8_USCALED,
    R8G8B8A8_SSCALED,
    R8G8B8A8_UINT,
    R8G8B8A8_SINT,
    R8G8B8A8_SRGB,
    B8G8R8A8_UNORM,
    B8G8R8A8_SNORM,
    B8G8R8A8_USCALED,
    B8G8R8A8_SSCALED,
    B8G8R8A8_UINT,
    B8G8R8A8_SINT,
    B8G8R8A8_SRGB,
    A8B8G8R8_UNORM_PACK32,
    A8B8G8R8_SNORM_PACK32,
    A8B8G8R8_USCALED_PACK32,
    A8B8G8R8_SSCALED_PACK32,
    A8B8G8R8_UINT_PACK32,
    A8B8G8R8_SINT_PACK32,
    A8B8G8R8_SRGB_PACK32,
    A2R10G10B10_UNORM_PACK32,
    A2R10G10B10_SNORM_PACK32,
    A2R10G10B10_USCALED_PACK32,
    A2R10G10B10_SSCALED_PACK32,
    A2R10G10B10_UINT_PACK32,
    A2R10G10B10_SINT_PACK32,
    A2B10G10R10_UNORM_PACK32,
    A2B10G10R10_SNORM_PACK32,
    A2B10G10R10_USCALED_PACK32,
    A2B10G10R10_SSCALED_PACK32,
    A2B10G10R10_UINT_PACK32,
    A2B10G10R10_SINT_PACK32,
    R16_UNORM,
    R16_SNORM,
    R16_USCALED,
    R16_SSCALED,
    R16_UINT,
    R16_SINT,
    R16_SFLOAT,
    R16G16_UNORM,
    R16G16_SNORM,
    R16G16_USCALED,
    R16G16_SSCALED,
    R16G16_UINT,
    R16G16_SINT,
    R16G16_SFLOAT,
    R16G16B16_UNORM,
    R16G16B16_SNORM,
    R16G16B16_USCALED,
    R16G16B16_SSCALED,
    R16G16B16_UINT,
    R16G16B16_SINT,
    R16G16B16_SFLOAT,
    R16G16B16A16_UNORM,
    R16G16B16A16_SNORM,
    R16G16B16A16_USCALED,
    R16G16B16A16_SSCALED,
    R16G16B16A16_UINT,
    R16G16B16A16_SINT,
    R16G16B16A16_SFLOAT,
    R32_UINT,
    R32_SINT,
    R32_SFLOAT,
    R32G32_UINT,
    R32G32_SINT,
    R32G32_SFLOAT,
    R32G32B32_UINT,
    R32G32B32_SINT,
    R32G32B32_SFLOAT,
    R32G32B32A32_UINT,
    R32G32B32A32_SINT,
    R32G32B32A32_SFLOAT,
    R64_UINT,
    R64_SINT,
    R64_SFLOAT,
    R64G64_UINT,
    R64G64_SINT,
    R64G64_SFLOAT,
    R64G64B64_UINT,
    R64G64B64_SINT,
    R64G64B64_SFLOAT,
    R64G64B64A64_UINT,
    R64G64B64A64_SINT,
    R64G64B64A64_SFLOAT,
    B10G11R11_UFLOAT_PACK32,
    E5B9G9R9_UFLOAT_PACK32,
    D16_UNORM,
    X8_D24_UNORM_PACK32,
    D32_SFLOAT,
    S8_UINT,
    D16_UNORM_S8_UINT,
    D24_UNORM_S8_UINT,
    D32_SFLOAT_S8_UINT,
    BC1_RGB_UNORM_BLOCK,
    BC1_RGB_SRGB_BLOCK,
    BC1_RGBA_UNORM_BLOCK,
    BC1_RGBA_SRGB_BLOCK,
    BC2_UNORM_BLOCK,
    BC2_SRGB_BLOCK,
    BC3_UNORM_BLOCK,
    BC3_SRGB_BLOCK,
    BC4_UNORM_BLOCK,
    BC4_SNORM_BLOCK,
    BC5_UNORM_BLOCK,
    BC5_SNORM_BLOCK,
    BC6H_UFLOAT_BLOCK,
    BC6H_SFLOAT_BLOCK,
    BC7_UNORM_BLOCK,
    BC7_SRGB_BLOCK,
    ETC2_R8G8B8_UNORM_BLOCK,
    ETC2_R8G8B8_SRGB_BLOCK,
    ETC2_R8G8B8A1_UNORM_BLOCK,
    ETC2_R8G8B8A1_SRGB_BLOCK,
    ETC2_R8G8B8A8_UNORM_BLOCK,
    ETC2_R8G8B8A8_SRGB_BLOCK,
    EAC_R11_UNORM_BLOCK,
    EAC_R11_SNORM_BLOCK,
    EAC_R11G11_UNORM_BLOCK,
    EAC_R11G11_SNORM_BLOCK,
    ASTC_4X4_UNORM_BLOCK,
    ASTC_4X4_SRGB_BLOCK,
    ASTC_5X4_UNORM_BLOCK,
    ASTC_5X4_SRGB_BLOCK,
    ASTC_5X5_UNORM_BLOCK,
    ASTC_5X5_SRGB_BLOCK,
    ASTC_6X5_UNORM_BLOCK,
    ASTC_6X5_SRGB_BLOCK,
    ASTC_6X6_UNORM_BLOCK,
    ASTC_6X6_SRGB_BLOCK,
    ASTC_8X5_UNORM_BLOCK,
    ASTC_8X5_SRGB_BLOCK,
    ASTC_8X6_UNORM_BLOCK,
    ASTC_8X6_SRGB_BLOCK,
    ASTC_8X8_UNORM_BLOCK,
    ASTC_8X8_SRGB_BLOCK,
    ASTC_10X5_UNORM_BLOCK,
    ASTC_10X5_SRGB_BLOCK,
    ASTC_10X6_UNORM_BLOCK,
    ASTC_10X6_SRGB_BLOCK,
    ASTC_10X8_UNORM_BLOCK,
    ASTC_10X8_SRGB_BLOCK,
    ASTC_10X10_UNORM_BLOCK,
    ASTC_10X10_SRGB_BLOCK,
    ASTC_12X10_UNORM_BLOCK,
    ASTC_12X10_SRGB_BLOCK,
    ASTC_12X12_UNORM_BLOCK,
    ASTC_12X12_SRGB_BLOCK,
}

impl Default for Format {
    fn default() -> Self {
        Self::UNDEFINED
    }
}

#[cfg(feature = "vulkan")]
impl From<Format> for vk::Format {
    fn from(val: Format) -> Self {
        match val {
            Format::UNDEFINED => Self::UNDEFINED,
            Format::R4G4_UNORM_PACK8 => Self::R4G4_UNORM_PACK8,
            Format::R4G4B4A4_UNORM_PACK16 => Self::R4G4B4A4_UNORM_PACK16,
            Format::B4G4R4A4_UNORM_PACK16 => Self::B4G4R4A4_UNORM_PACK16,
            Format::R5G6B5_UNORM_PACK16 => Self::R5G6B5_UNORM_PACK16,
            Format::B5G6R5_UNORM_PACK16 => Self::B5G6R5_UNORM_PACK16,
            Format::R5G5B5A1_UNORM_PACK16 => Self::R5G5B5A1_UNORM_PACK16,
            Format::B5G5R5A1_UNORM_PACK16 => Self::B5G5R5A1_UNORM_PACK16,
            Format::A1R5G5B5_UNORM_PACK16 => Self::A1R5G5B5_UNORM_PACK16,
            Format::R8_UNORM => Self::R8_UNORM,
            Format::R8_SNORM => Self::R8_SNORM,
            Format::R8_USCALED => Self::R8_USCALED,
            Format::R8_SSCALED => Self::R8_SSCALED,
            Format::R8_UINT => Self::R8_UINT,
            Format::R8_SINT => Self::R8_SINT,
            Format::R8_SRGB => Self::R8_SRGB,
            Format::R8G8_UNORM => Self::R8G8_UNORM,
            Format::R8G8_SNORM => Self::R8G8_SNORM,
            Format::R8G8_USCALED => Self::R8G8_USCALED,
            Format::R8G8_SSCALED => Self::R8G8_SSCALED,
            Format::R8G8_UINT => Self::R8G8_UINT,
            Format::R8G8_SINT => Self::R8G8_SINT,
            Format::R8G8_SRGB => Self::R8G8_SRGB,
            Format::R8G8B8_UNORM => Self::R8G8B8_UNORM,
            Format::R8G8B8_SNORM => Self::R8G8B8_SNORM,
            Format::R8G8B8_USCALED => Self::R8G8B8_USCALED,
            Format::R8G8B8_SSCALED => Self::R8G8B8_SSCALED,
            Format::R8G8B8_UINT => Self::R8G8B8_UINT,
            Format::R8G8B8_SINT => Self::R8G8B8_SINT,
            Format::R8G8B8_SRGB => Self::R8G8B8_SRGB,
            Format::B8G8R8_UNORM => Self::B8G8R8_UNORM,
            Format::B8G8R8_SNORM => Self::B8G8R8_SNORM,
            Format::B8G8R8_USCALED => Self::B8G8R8_USCALED,
            Format::B8G8R8_SSCALED => Self::B8G8R8_SSCALED,
            Format::B8G8R8_UINT => Self::B8G8R8_UINT,
            Format::B8G8R8_SINT => Self::B8G8R8_SINT,
            Format::B8G8R8_SRGB => Self::B8G8R8_SRGB,
            Format::R8G8B8A8_UNORM => Self::R8G8B8A8_UNORM,
            Format::R8G8B8A8_SNORM => Self::R8G8B8A8_SNORM,
            Format::R8G8B8A8_USCALED => Self::R8G8B8A8_USCALED,
            Format::R8G8B8A8_SSCALED => Self::R8G8B8A8_SSCALED,
            Format::R8G8B8A8_UINT => Self::R8G8B8A8_UINT,
            Format::R8G8B8A8_SINT => Self::R8G8B8A8_SINT,
            Format::R8G8B8A8_SRGB => Self::R8G8B8A8_SRGB,
            Format::B8G8R8A8_UNORM => Self::B8G8R8A8_UNORM,
            Format::B8G8R8A8_SNORM => Self::B8G8R8A8_SNORM,
            Format::B8G8R8A8_USCALED => Self::B8G8R8A8_USCALED,
            Format::B8G8R8A8_SSCALED => Self::B8G8R8A8_SSCALED,
            Format::B8G8R8A8_UINT => Self::B8G8R8A8_UINT,
            Format::B8G8R8A8_SINT => Self::B8G8R8A8_SINT,
            Format::B8G8R8A8_SRGB => Self::B8G8R8A8_SRGB,
            Format::A8B8G8R8_UNORM_PACK32 => Self::A8B8G8R8_UNORM_PACK32,
            Format::A8B8G8R8_SNORM_PACK32 => Self::A8B8G8R8_SNORM_PACK32,
            Format::A8B8G8R8_USCALED_PACK32 => Self::A8B8G8R8_USCALED_PACK32,
            Format::A8B8G8R8_SSCALED_PACK32 => Self::A8B8G8R8_SSCALED_PACK32,
            Format::A8B8G8R8_UINT_PACK32 => Self::A8B8G8R8_UINT_PACK32,
            Format::A8B8G8R8_SINT_PACK32 => Self::A8B8G8R8_SINT_PACK32,
            Format::A8B8G8R8_SRGB_PACK32 => Self::A8B8G8R8_SRGB_PACK32,
            Format::A2R10G10B10_UNORM_PACK32 => Self::A2R10G10B10_UNORM_PACK32,
            Format::A2R10G10B10_SNORM_PACK32 => Self::A2R10G10B10_SNORM_PACK32,
            Format::A2R10G10B10_USCALED_PACK32 => Self::A2R10G10B10_USCALED_PACK32,
            Format::A2R10G10B10_SSCALED_PACK32 => Self::A2R10G10B10_SSCALED_PACK32,
            Format::A2R10G10B10_UINT_PACK32 => Self::A2R10G10B10_UINT_PACK32,
            Format::A2R10G10B10_SINT_PACK32 => Self::A2R10G10B10_SINT_PACK32,
            Format::A2B10G10R10_UNORM_PACK32 => Self::A2B10G10R10_UNORM_PACK32,
            Format::A2B10G10R10_SNORM_PACK32 => Self::A2B10G10R10_SNORM_PACK32,
            Format::A2B10G10R10_USCALED_PACK32 => Self::A2B10G10R10_USCALED_PACK32,
            Format::A2B10G10R10_SSCALED_PACK32 => Self::A2B10G10R10_SSCALED_PACK32,
            Format::A2B10G10R10_UINT_PACK32 => Self::A2B10G10R10_UINT_PACK32,
            Format::A2B10G10R10_SINT_PACK32 => Self::A2B10G10R10_SINT_PACK32,
            Format::R16_UNORM => Self::R16_UNORM,
            Format::R16_SNORM => Self::R16_SNORM,
            Format::R16_USCALED => Self::R16_USCALED,
            Format::R16_SSCALED => Self::R16_SSCALED,
            Format::R16_UINT => Self::R16_UINT,
            Format::R16_SINT => Self::R16_SINT,
            Format::R16_SFLOAT => Self::R16_SFLOAT,
            Format::R16G16_UNORM => Self::R16G16_UNORM,
            Format::R16G16_SNORM => Self::R16G16_SNORM,
            Format::R16G16_USCALED => Self::R16G16_USCALED,
            Format::R16G16_SSCALED => Self::R16G16_SSCALED,
            Format::R16G16_UINT => Self::R16G16_UINT,
            Format::R16G16_SINT => Self::R16G16_SINT,
            Format::R16G16_SFLOAT => Self::R16G16_SFLOAT,
            Format::R16G16B16_UNORM => Self::R16G16B16_UNORM,
            Format::R16G16B16_SNORM => Self::R16G16B16_SNORM,
            Format::R16G16B16_USCALED => Self::R16G16B16_USCALED,
            Format::R16G16B16_SSCALED => Self::R16G16B16_SSCALED,
            Format::R16G16B16_UINT => Self::R16G16B16_UINT,
            Format::R16G16B16_SINT => Self::R16G16B16_SINT,
            Format::R16G16B16_SFLOAT => Self::R16G16B16_SFLOAT,
            Format::R16G16B16A16_UNORM => Self::R16G16B16A16_UNORM,
            Format::R16G16B16A16_SNORM => Self::R16G16B16A16_SNORM,
            Format::R16G16B16A16_USCALED => Self::R16G16B16A16_USCALED,
            Format::R16G16B16A16_SSCALED => Self::R16G16B16A16_SSCALED,
            Format::R16G16B16A16_UINT => Self::R16G16B16A16_UINT,
            Format::R16G16B16A16_SINT => Self::R16G16B16A16_SINT,
            Format::R16G16B16A16_SFLOAT => Self::R16G16B16A16_SFLOAT,
            Format::R32_UINT => Self::R32_UINT,
            Format::R32_SINT => Self::R32_SINT,
            Format::R32_SFLOAT => Self::R32_SFLOAT,
            Format::R32G32_UINT => Self::R32G32_UINT,
            Format::R32G32_SINT => Self::R32G32_SINT,
            Format::R32G32_SFLOAT => Self::R32G32_SFLOAT,
            Format::R32G32B32_UINT => Self::R32G32B32_UINT,
            Format::R32G32B32_SINT => Self::R32G32B32_SINT,
            Format::R32G32B32_SFLOAT => Self::R32G32B32_SFLOAT,
            Format::R32G32B32A32_UINT => Self::R32G32B32A32_UINT,
            Format::R32G32B32A32_SINT => Self::R32G32B32A32_SINT,
            Format::R32G32B32A32_SFLOAT => Self::R32G32B32A32_SFLOAT,
            Format::R64_UINT => Self::R64_UINT,
            Format::R64_SINT => Self::R64_SINT,
            Format::R64_SFLOAT => Self::R64_SFLOAT,
            Format::R64G64_UINT => Self::R64G64_UINT,
            Format::R64G64_SINT => Self::R64G64_SINT,
            Format::R64G64_SFLOAT => Self::R64G64_SFLOAT,
            Format::R64G64B64_UINT => Self::R64G64B64_UINT,
            Format::R64G64B64_SINT => Self::R64G64B64_SINT,
            Format::R64G64B64_SFLOAT => Self::R64G64B64_SFLOAT,
            Format::R64G64B64A64_UINT => Self::R64G64B64A64_UINT,
            Format::R64G64B64A64_SINT => Self::R64G64B64A64_SINT,
            Format::R64G64B64A64_SFLOAT => Self::R64G64B64A64_SFLOAT,
            Format::B10G11R11_UFLOAT_PACK32 => Self::B10G11R11_UFLOAT_PACK32,
            Format::E5B9G9R9_UFLOAT_PACK32 => Self::E5B9G9R9_UFLOAT_PACK32,
            Format::D16_UNORM => Self::D16_UNORM,
            Format::X8_D24_UNORM_PACK32 => Self::X8_D24_UNORM_PACK32,
            Format::D32_SFLOAT => Self::D32_SFLOAT,
            Format::S8_UINT => Self::S8_UINT,
            Format::D16_UNORM_S8_UINT => Self::D16_UNORM_S8_UINT,
            Format::D24_UNORM_S8_UINT => Self::D24_UNORM_S8_UINT,
            Format::D32_SFLOAT_S8_UINT => Self::D32_SFLOAT_S8_UINT,
            Format::BC1_RGB_UNORM_BLOCK => Self::BC1_RGB_UNORM_BLOCK,
            Format::BC1_RGB_SRGB_BLOCK => Self::BC1_RGB_SRGB_BLOCK,
            Format::BC1_RGBA_UNORM_BLOCK => Self::BC1_RGBA_UNORM_BLOCK,
            Format::BC1_RGBA_SRGB_BLOCK => Self::BC1_RGBA_SRGB_BLOCK,
            Format::BC2_UNORM_BLOCK => Self::BC2_UNORM_BLOCK,
            Format::BC2_SRGB_BLOCK => Self::BC2_SRGB_BLOCK,
            Format::BC3_UNORM_BLOCK => Self::BC3_UNORM_BLOCK,
            Format::BC3_SRGB_BLOCK => Self::BC3_SRGB_BLOCK,
            Format::BC4_UNORM_BLOCK => Self::BC4_UNORM_BLOCK,
            Format::BC4_SNORM_BLOCK => Self::BC4_SNORM_BLOCK,
            Format::BC5_UNORM_BLOCK => Self::BC5_UNORM_BLOCK,
            Format::BC5_SNORM_BLOCK => Self::BC5_SNORM_BLOCK,
            Format::BC6H_UFLOAT_BLOCK => Self::BC6H_UFLOAT_BLOCK,
            Format::BC6H_SFLOAT_BLOCK => Self::BC6H_SFLOAT_BLOCK,
            Format::BC7_UNORM_BLOCK => Self::BC7_UNORM_BLOCK,
            Format::BC7_SRGB_BLOCK => Self::BC7_SRGB_BLOCK,
            Format::ETC2_R8G8B8_UNORM_BLOCK => Self::ETC2_R8G8B8_UNORM_BLOCK,
            Format::ETC2_R8G8B8_SRGB_BLOCK => Self::ETC2_R8G8B8_SRGB_BLOCK,
            Format::ETC2_R8G8B8A1_UNORM_BLOCK => Self::ETC2_R8G8B8A1_UNORM_BLOCK,
            Format::ETC2_R8G8B8A1_SRGB_BLOCK => Self::ETC2_R8G8B8A1_SRGB_BLOCK,
            Format::ETC2_R8G8B8A8_UNORM_BLOCK => Self::ETC2_R8G8B8A8_UNORM_BLOCK,
            Format::ETC2_R8G8B8A8_SRGB_BLOCK => Self::ETC2_R8G8B8A8_SRGB_BLOCK,
            Format::EAC_R11_UNORM_BLOCK => Self::EAC_R11_UNORM_BLOCK,
            Format::EAC_R11_SNORM_BLOCK => Self::EAC_R11_SNORM_BLOCK,
            Format::EAC_R11G11_UNORM_BLOCK => Self::EAC_R11G11_UNORM_BLOCK,
            Format::EAC_R11G11_SNORM_BLOCK => Self::EAC_R11G11_SNORM_BLOCK,
            Format::ASTC_4X4_UNORM_BLOCK => Self::ASTC_4X4_UNORM_BLOCK,
            Format::ASTC_4X4_SRGB_BLOCK => Self::ASTC_4X4_SRGB_BLOCK,
            Format::ASTC_5X4_UNORM_BLOCK => Self::ASTC_5X4_UNORM_BLOCK,
            Format::ASTC_5X4_SRGB_BLOCK => Self::ASTC_5X4_SRGB_BLOCK,
            Format::ASTC_5X5_UNORM_BLOCK => Self::ASTC_5X5_UNORM_BLOCK,
            Format::ASTC_5X5_SRGB_BLOCK => Self::ASTC_5X5_SRGB_BLOCK,
            Format::ASTC_6X5_UNORM_BLOCK => Self::ASTC_6X5_UNORM_BLOCK,
            Format::ASTC_6X5_SRGB_BLOCK => Self::ASTC_6X5_SRGB_BLOCK,
            Format::ASTC_6X6_UNORM_BLOCK => Self::ASTC_6X6_UNORM_BLOCK,
            Format::ASTC_6X6_SRGB_BLOCK => Self::ASTC_6X6_SRGB_BLOCK,
            Format::ASTC_8X5_UNORM_BLOCK => Self::ASTC_8X5_UNORM_BLOCK,
            Format::ASTC_8X5_SRGB_BLOCK => Self::ASTC_8X5_SRGB_BLOCK,
            Format::ASTC_8X6_UNORM_BLOCK => Self::ASTC_8X6_UNORM_BLOCK,
            Format::ASTC_8X6_SRGB_BLOCK => Self::ASTC_8X6_SRGB_BLOCK,
            Format::ASTC_8X8_UNORM_BLOCK => Self::ASTC_8X8_UNORM_BLOCK,
            Format::ASTC_8X8_SRGB_BLOCK => Self::ASTC_8X8_SRGB_BLOCK,
            Format::ASTC_10X5_UNORM_BLOCK => Self::ASTC_10X5_UNORM_BLOCK,
            Format::ASTC_10X5_SRGB_BLOCK => Self::ASTC_10X5_SRGB_BLOCK,
            Format::ASTC_10X6_UNORM_BLOCK => Self::ASTC_10X6_UNORM_BLOCK,
            Format::ASTC_10X6_SRGB_BLOCK => Self::ASTC_10X6_SRGB_BLOCK,
            Format::ASTC_10X8_UNORM_BLOCK => Self::ASTC_10X8_UNORM_BLOCK,
            Format::ASTC_10X8_SRGB_BLOCK => Self::ASTC_10X8_SRGB_BLOCK,
            Format::ASTC_10X10_UNORM_BLOCK => Self::ASTC_10X10_UNORM_BLOCK,
            Format::ASTC_10X10_SRGB_BLOCK => Self::ASTC_10X10_SRGB_BLOCK,
            Format::ASTC_12X10_UNORM_BLOCK => Self::ASTC_12X10_UNORM_BLOCK,
            Format::ASTC_12X10_SRGB_BLOCK => Self::ASTC_12X10_SRGB_BLOCK,
            Format::ASTC_12X12_UNORM_BLOCK => Self::ASTC_12X12_UNORM_BLOCK,
            Format::ASTC_12X12_SRGB_BLOCK => Self::ASTC_12X12_SRGB_BLOCK,
        }
    }
}

#[cfg(feature = "vulkan")]
impl From<vk::Format> for Format {
    fn from(format: vk::Format) -> Self {
        match format {
            vk::Format::R4G4_UNORM_PACK8 => Self::R4G4_UNORM_PACK8,
            vk::Format::R4G4B4A4_UNORM_PACK16 => Self::R4G4B4A4_UNORM_PACK16,
            vk::Format::B4G4R4A4_UNORM_PACK16 => Self::B4G4R4A4_UNORM_PACK16,
            vk::Format::R5G6B5_UNORM_PACK16 => Self::R5G6B5_UNORM_PACK16,
            vk::Format::B5G6R5_UNORM_PACK16 => Self::B5G6R5_UNORM_PACK16,
            vk::Format::R5G5B5A1_UNORM_PACK16 => Self::R5G5B5A1_UNORM_PACK16,
            vk::Format::B5G5R5A1_UNORM_PACK16 => Self::B5G5R5A1_UNORM_PACK16,
            vk::Format::A1R5G5B5_UNORM_PACK16 => Self::A1R5G5B5_UNORM_PACK16,
            vk::Format::R8_UNORM => Self::R8_UNORM,
            vk::Format::R8_SNORM => Self::R8_SNORM,
            vk::Format::R8_USCALED => Self::R8_USCALED,
            vk::Format::R8_SSCALED => Self::R8_SSCALED,
            vk::Format::R8_UINT => Self::R8_UINT,
            vk::Format::R8_SINT => Self::R8_SINT,
            vk::Format::R8_SRGB => Self::R8_SRGB,
            vk::Format::R8G8_UNORM => Self::R8G8_UNORM,
            vk::Format::R8G8_SNORM => Self::R8G8_SNORM,
            vk::Format::R8G8_USCALED => Self::R8G8_USCALED,
            vk::Format::R8G8_SSCALED => Self::R8G8_SSCALED,
            vk::Format::R8G8_UINT => Self::R8G8_UINT,
            vk::Format::R8G8_SINT => Self::R8G8_SINT,
            vk::Format::R8G8_SRGB => Self::R8G8_SRGB,
            vk::Format::R8G8B8_UNORM => Self::R8G8B8_UNORM,
            vk::Format::R8G8B8_SNORM => Self::R8G8B8_SNORM,
            vk::Format::R8G8B8_USCALED => Self::R8G8B8_USCALED,
            vk::Format::R8G8B8_SSCALED => Self::R8G8B8_SSCALED,
            vk::Format::R8G8B8_UINT => Self::R8G8B8_UINT,
            vk::Format::R8G8B8_SINT => Self::R8G8B8_SINT,
            vk::Format::R8G8B8_SRGB => Self::R8G8B8_SRGB,
            vk::Format::B8G8R8_UNORM => Self::B8G8R8_UNORM,
            vk::Format::B8G8R8_SNORM => Self::B8G8R8_SNORM,
            vk::Format::B8G8R8_USCALED => Self::B8G8R8_USCALED,
            vk::Format::B8G8R8_SSCALED => Self::B8G8R8_SSCALED,
            vk::Format::B8G8R8_UINT => Self::B8G8R8_UINT,
            vk::Format::B8G8R8_SINT => Self::B8G8R8_SINT,
            vk::Format::B8G8R8_SRGB => Self::B8G8R8_SRGB,
            vk::Format::R8G8B8A8_UNORM => Self::R8G8B8A8_UNORM,
            vk::Format::R8G8B8A8_SNORM => Self::R8G8B8A8_SNORM,
            vk::Format::R8G8B8A8_USCALED => Self::R8G8B8A8_USCALED,
            vk::Format::R8G8B8A8_SSCALED => Self::R8G8B8A8_SSCALED,
            vk::Format::R8G8B8A8_UINT => Self::R8G8B8A8_UINT,
            vk::Format::R8G8B8A8_SINT => Self::R8G8B8A8_SINT,
            vk::Format::R8G8B8A8_SRGB => Self::R8G8B8A8_SRGB,
            vk::Format::B8G8R8A8_UNORM => Self::B8G8R8A8_UNORM,
            vk::Format::B8G8R8A8_SNORM => Self::B8G8R8A8_SNORM,
            vk::Format::B8G8R8A8_USCALED => Self::B8G8R8A8_USCALED,
            vk::Format::B8G8R8A8_SSCALED => Self::B8G8R8A8_SSCALED,
            vk::Format::B8G8R8A8_UINT => Self::B8G8R8A8_UINT,
            vk::Format::B8G8R8A8_SINT => Self::B8G8R8A8_SINT,
            vk::Format::B8G8R8A8_SRGB => Self::B8G8R8A8_SRGB,
            vk::Format::A8B8G8R8_UNORM_PACK32 => Self::A8B8G8R8_UNORM_PACK32,
            vk::Format::A8B8G8R8_SNORM_PACK32 => Self::A8B8G8R8_SNORM_PACK32,
            vk::Format::A8B8G8R8_USCALED_PACK32 => Self::A8B8G8R8_USCALED_PACK32,
            vk::Format::A8B8G8R8_SSCALED_PACK32 => Self::A8B8G8R8_SSCALED_PACK32,
            vk::Format::A8B8G8R8_UINT_PACK32 => Self::A8B8G8R8_UINT_PACK32,
            vk::Format::A8B8G8R8_SINT_PACK32 => Self::A8B8G8R8_SINT_PACK32,
            vk::Format::A8B8G8R8_SRGB_PACK32 => Self::A8B8G8R8_SRGB_PACK32,
            vk::Format::A2R10G10B10_UNORM_PACK32 => Self::A2R10G10B10_UNORM_PACK32,
            vk::Format::A2R10G10B10_SNORM_PACK32 => Self::A2R10G10B10_SNORM_PACK32,
            vk::Format::A2R10G10B10_USCALED_PACK32 => Self::A2R10G10B10_USCALED_PACK32,
            vk::Format::A2R10G10B10_SSCALED_PACK32 => Self::A2R10G10B10_SSCALED_PACK32,
            vk::Format::A2R10G10B10_UINT_PACK32 => Self::A2R10G10B10_UINT_PACK32,
            vk::Format::A2R10G10B10_SINT_PACK32 => Self::A2R10G10B10_SINT_PACK32,
            vk::Format::A2B10G10R10_UNORM_PACK32 => Self::A2B10G10R10_UNORM_PACK32,
            vk::Format::A2B10G10R10_SNORM_PACK32 => Self::A2B10G10R10_SNORM_PACK32,
            vk::Format::A2B10G10R10_USCALED_PACK32 => Self::A2B10G10R10_USCALED_PACK32,
            vk::Format::A2B10G10R10_SSCALED_PACK32 => Self::A2B10G10R10_SSCALED_PACK32,
            vk::Format::A2B10G10R10_UINT_PACK32 => Self::A2B10G10R10_UINT_PACK32,
            vk::Format::A2B10G10R10_SINT_PACK32 => Self::A2B10G10R10_SINT_PACK32,
            vk::Format::R16_UNORM => Self::R16_UNORM,
            vk::Format::R16_SNORM => Self::R16_SNORM,
            vk::Format::R16_USCALED => Self::R16_USCALED,
            vk::Format::R16_SSCALED => Self::R16_SSCALED,
            vk::Format::R16_UINT => Self::R16_UINT,
            vk::Format::R16_SINT => Self::R16_SINT,
            vk::Format::R16_SFLOAT => Self::R16_SFLOAT,
            vk::Format::R16G16_UNORM => Self::R16G16_UNORM,
            vk::Format::R16G16_SNORM => Self::R16G16_SNORM,
            vk::Format::R16G16_USCALED => Self::R16G16_USCALED,
            vk::Format::R16G16_SSCALED => Self::R16G16_SSCALED,
            vk::Format::R16G16_UINT => Self::R16G16_UINT,
            vk::Format::R16G16_SINT => Self::R16G16_SINT,
            vk::Format::R16G16_SFLOAT => Self::R16G16_SFLOAT,
            vk::Format::R16G16B16_UNORM => Self::R16G16B16_UNORM,
            vk::Format::R16G16B16_SNORM => Self::R16G16B16_SNORM,
            vk::Format::R16G16B16_USCALED => Self::R16G16B16_USCALED,
            vk::Format::R16G16B16_SSCALED => Self::R16G16B16_SSCALED,
            vk::Format::R16G16B16_UINT => Self::R16G16B16_UINT,
            vk::Format::R16G16B16_SINT => Self::R16G16B16_SINT,
            vk::Format::R16G16B16_SFLOAT => Self::R16G16B16_SFLOAT,
            vk::Format::R16G16B16A16_UNORM => Self::R16G16B16A16_UNORM,
            vk::Format::R16G16B16A16_SNORM => Self::R16G16B16A16_SNORM,
            vk::Format::R16G16B16A16_USCALED => Self::R16G16B16A16_USCALED,
            vk::Format::R16G16B16A16_SSCALED => Self::R16G16B16A16_SSCALED,
            vk::Format::R16G16B16A16_UINT => Self::R16G16B16A16_UINT,
            vk::Format::R16G16B16A16_SINT => Self::R16G16B16A16_SINT,
            vk::Format::R16G16B16A16_SFLOAT => Self::R16G16B16A16_SFLOAT,
            vk::Format::R32_UINT => Self::R32_UINT,
            vk::Format::R32_SINT => Self::R32_SINT,
            vk::Format::R32_SFLOAT => Self::R32_SFLOAT,
            vk::Format::R32G32_UINT => Self::R32G32_UINT,
            vk::Format::R32G32_SINT => Self::R32G32_SINT,
            vk::Format::R32G32_SFLOAT => Self::R32G32_SFLOAT,
            vk::Format::R32G32B32_UINT => Self::R32G32B32_UINT,
            vk::Format::R32G32B32_SINT => Self::R32G32B32_SINT,
            vk::Format::R32G32B32_SFLOAT => Self::R32G32B32_SFLOAT,
            vk::Format::R32G32B32A32_UINT => Self::R32G32B32A32_UINT,
            vk::Format::R32G32B32A32_SINT => Self::R32G32B32A32_SINT,
            vk::Format::R32G32B32A32_SFLOAT => Self::R32G32B32A32_SFLOAT,
            vk::Format::R64_UINT => Self::R64_UINT,
            vk::Format::R64_SINT => Self::R64_SINT,
            vk::Format::R64_SFLOAT => Self::R64_SFLOAT,
            vk::Format::R64G64_UINT => Self::R64G64_UINT,
            vk::Format::R64G64_SINT => Self::R64G64_SINT,
            vk::Format::R64G64_SFLOAT => Self::R64G64_SFLOAT,
            vk::Format::R64G64B64_UINT => Self::R64G64B64_UINT,
            vk::Format::R64G64B64_SINT => Self::R64G64B64_SINT,
            vk::Format::R64G64B64_SFLOAT => Self::R64G64B64_SFLOAT,
            vk::Format::R64G64B64A64_UINT => Self::R64G64B64A64_UINT,
            vk::Format::R64G64B64A64_SINT => Self::R64G64B64A64_SINT,
            vk::Format::R64G64B64A64_SFLOAT => Self::R64G64B64A64_SFLOAT,
            vk::Format::B10G11R11_UFLOAT_PACK32 => Self::B10G11R11_UFLOAT_PACK32,
            vk::Format::E5B9G9R9_UFLOAT_PACK32 => Self::E5B9G9R9_UFLOAT_PACK32,
            vk::Format::D16_UNORM => Self::D16_UNORM,
            vk::Format::X8_D24_UNORM_PACK32 => Self::X8_D24_UNORM_PACK32,
            vk::Format::D32_SFLOAT => Self::D32_SFLOAT,
            vk::Format::S8_UINT => Self::S8_UINT,
            vk::Format::D16_UNORM_S8_UINT => Self::D16_UNORM_S8_UINT,
            vk::Format::D24_UNORM_S8_UINT => Self::D24_UNORM_S8_UINT,
            vk::Format::D32_SFLOAT_S8_UINT => Self::D32_SFLOAT_S8_UINT,
            vk::Format::BC1_RGB_UNORM_BLOCK => Self::BC1_RGB_UNORM_BLOCK,
            vk::Format::BC1_RGB_SRGB_BLOCK => Self::BC1_RGB_SRGB_BLOCK,
            vk::Format::BC1_RGBA_UNORM_BLOCK => Self::BC1_RGBA_UNORM_BLOCK,
            vk::Format::BC1_RGBA_SRGB_BLOCK => Self::BC1_RGBA_SRGB_BLOCK,
            vk::Format::BC2_UNORM_BLOCK => Self::BC2_UNORM_BLOCK,
            vk::Format::BC2_SRGB_BLOCK => Self::BC2_SRGB_BLOCK,
            vk::Format::BC3_UNORM_BLOCK => Self::BC3_UNORM_BLOCK,
            vk::Format::BC3_SRGB_BLOCK => Self::BC3_SRGB_BLOCK,
            vk::Format::BC4_UNORM_BLOCK => Self::BC4_UNORM_BLOCK,
            vk::Format::BC4_SNORM_BLOCK => Self::BC4_SNORM_BLOCK,
            vk::Format::BC5_UNORM_BLOCK => Self::BC5_UNORM_BLOCK,
            vk::Format::BC5_SNORM_BLOCK => Self::BC5_SNORM_BLOCK,
            vk::Format::BC6H_UFLOAT_BLOCK => Self::BC6H_UFLOAT_BLOCK,
            vk::Format::BC6H_SFLOAT_BLOCK => Self::BC6H_SFLOAT_BLOCK,
            vk::Format::BC7_UNORM_BLOCK => Self::BC7_UNORM_BLOCK,
            vk::Format::BC7_SRGB_BLOCK => Self::BC7_SRGB_BLOCK,
            vk::Format::ETC2_R8G8B8_UNORM_BLOCK => Self::ETC2_R8G8B8_UNORM_BLOCK,
            vk::Format::ETC2_R8G8B8_SRGB_BLOCK => Self::ETC2_R8G8B8_SRGB_BLOCK,
            vk::Format::ETC2_R8G8B8A1_UNORM_BLOCK => Self::ETC2_R8G8B8A1_UNORM_BLOCK,
            vk::Format::ETC2_R8G8B8A1_SRGB_BLOCK => Self::ETC2_R8G8B8A1_SRGB_BLOCK,
            vk::Format::ETC2_R8G8B8A8_UNORM_BLOCK => Self::ETC2_R8G8B8A8_UNORM_BLOCK,
            vk::Format::ETC2_R8G8B8A8_SRGB_BLOCK => Self::ETC2_R8G8B8A8_SRGB_BLOCK,
            vk::Format::EAC_R11_UNORM_BLOCK => Self::EAC_R11_UNORM_BLOCK,
            vk::Format::EAC_R11_SNORM_BLOCK => Self::EAC_R11_SNORM_BLOCK,
            vk::Format::EAC_R11G11_UNORM_BLOCK => Self::EAC_R11G11_UNORM_BLOCK,
            vk::Format::EAC_R11G11_SNORM_BLOCK => Self::EAC_R11G11_SNORM_BLOCK,
            vk::Format::ASTC_4X4_UNORM_BLOCK => Self::ASTC_4X4_UNORM_BLOCK,
            vk::Format::ASTC_4X4_SRGB_BLOCK => Self::ASTC_4X4_SRGB_BLOCK,
            vk::Format::ASTC_5X4_UNORM_BLOCK => Self::ASTC_5X4_UNORM_BLOCK,
            vk::Format::ASTC_5X4_SRGB_BLOCK => Self::ASTC_5X4_SRGB_BLOCK,
            vk::Format::ASTC_5X5_UNORM_BLOCK => Self::ASTC_5X5_UNORM_BLOCK,
            vk::Format::ASTC_5X5_SRGB_BLOCK => Self::ASTC_5X5_SRGB_BLOCK,
            vk::Format::ASTC_6X5_UNORM_BLOCK => Self::ASTC_6X5_UNORM_BLOCK,
            vk::Format::ASTC_6X5_SRGB_BLOCK => Self::ASTC_6X5_SRGB_BLOCK,
            vk::Format::ASTC_6X6_UNORM_BLOCK => Self::ASTC_6X6_UNORM_BLOCK,
            vk::Format::ASTC_6X6_SRGB_BLOCK => Self::ASTC_6X6_SRGB_BLOCK,
            vk::Format::ASTC_8X5_UNORM_BLOCK => Self::ASTC_8X5_UNORM_BLOCK,
            vk::Format::ASTC_8X5_SRGB_BLOCK => Self::ASTC_8X5_SRGB_BLOCK,
            vk::Format::ASTC_8X6_UNORM_BLOCK => Self::ASTC_8X6_UNORM_BLOCK,
            vk::Format::ASTC_8X6_SRGB_BLOCK => Self::ASTC_8X6_SRGB_BLOCK,
            vk::Format::ASTC_8X8_UNORM_BLOCK => Self::ASTC_8X8_UNORM_BLOCK,
            vk::Format::ASTC_8X8_SRGB_BLOCK => Self::ASTC_8X8_SRGB_BLOCK,
            vk::Format::ASTC_10X5_UNORM_BLOCK => Self::ASTC_10X5_UNORM_BLOCK,
            vk::Format::ASTC_10X5_SRGB_BLOCK => Self::ASTC_10X5_SRGB_BLOCK,
            vk::Format::ASTC_10X6_UNORM_BLOCK => Self::ASTC_10X6_UNORM_BLOCK,
            vk::Format::ASTC_10X6_SRGB_BLOCK => Self::ASTC_10X6_SRGB_BLOCK,
            vk::Format::ASTC_10X8_UNORM_BLOCK => Self::ASTC_10X8_UNORM_BLOCK,
            vk::Format::ASTC_10X8_SRGB_BLOCK => Self::ASTC_10X8_SRGB_BLOCK,
            vk::Format::ASTC_10X10_UNORM_BLOCK => Self::ASTC_10X10_UNORM_BLOCK,
            vk::Format::ASTC_10X10_SRGB_BLOCK => Self::ASTC_10X10_SRGB_BLOCK,
            vk::Format::ASTC_12X10_UNORM_BLOCK => Self::ASTC_12X10_UNORM_BLOCK,
            vk::Format::ASTC_12X10_SRGB_BLOCK => Self::ASTC_12X10_SRGB_BLOCK,
            vk::Format::ASTC_12X12_UNORM_BLOCK => Self::ASTC_12X12_UNORM_BLOCK,
            vk::Format::ASTC_12X12_SRGB_BLOCK => Self::ASTC_12X12_SRGB_BLOCK,
            _ => Self::UNDEFINED,
        }
    }
}

// Returns None for formats unlikely to be used for vertices (like ATSC blocks)
// or undefined
impl Format {
    pub fn is_depth_only(self) -> bool {
        matches!(
            self,
            Self::D16_UNORM | Self::X8_D24_UNORM_PACK32 | Self::D32_SFLOAT
        )
    }

    pub fn is_stencil_only(self) -> bool {
        self == Self::S8_UINT
    }

    pub fn is_depth_and_stencil(self) -> bool {
        match self {
            Format::D16_UNORM_S8_UINT | Format::D24_UNORM_S8_UINT | Format::D32_SFLOAT_S8_UINT => {
                true
            }
            _ => false,
        }
    }

    pub fn has_depth(self) -> bool {
        self.is_depth_and_stencil() || self.is_depth_only()
    }

    pub fn has_stencil(self) -> bool {
        self.is_depth_and_stencil() || self.is_stencil_only()
    }

    pub fn has_depth_or_stencil(self) -> bool {
        self.is_depth_and_stencil() || self.is_stencil_only() || self.is_depth_only()
    }

    pub fn is_undefined(self) -> bool {
        self == Self::UNDEFINED
    }

    pub fn is_compressed(self) -> bool {
        matches!(
            self,
            Self::BC1_RGB_UNORM_BLOCK
                | Self::BC1_RGB_SRGB_BLOCK
                | Self::BC1_RGBA_UNORM_BLOCK
                | Self::BC1_RGBA_SRGB_BLOCK
                | Self::BC2_UNORM_BLOCK
                | Self::BC2_SRGB_BLOCK
                | Self::BC3_UNORM_BLOCK
                | Self::BC3_SRGB_BLOCK
                | Self::BC4_UNORM_BLOCK
                | Self::BC4_SNORM_BLOCK
                | Self::BC5_UNORM_BLOCK
                | Self::BC5_SNORM_BLOCK
                | Self::BC6H_UFLOAT_BLOCK
                | Self::BC6H_SFLOAT_BLOCK
                | Self::BC7_UNORM_BLOCK
                | Self::BC7_SRGB_BLOCK
                | Self::ETC2_R8G8B8_UNORM_BLOCK
                | Self::ETC2_R8G8B8_SRGB_BLOCK
                | Self::ETC2_R8G8B8A1_UNORM_BLOCK
                | Self::ETC2_R8G8B8A1_SRGB_BLOCK
                | Self::ETC2_R8G8B8A8_UNORM_BLOCK
                | Self::ETC2_R8G8B8A8_SRGB_BLOCK
                | Self::EAC_R11_UNORM_BLOCK
                | Self::EAC_R11_SNORM_BLOCK
                | Self::EAC_R11G11_UNORM_BLOCK
                | Self::EAC_R11G11_SNORM_BLOCK
                | Self::ASTC_4X4_UNORM_BLOCK
                | Self::ASTC_4X4_SRGB_BLOCK
                | Self::ASTC_5X4_UNORM_BLOCK
                | Self::ASTC_5X4_SRGB_BLOCK
                | Self::ASTC_5X5_UNORM_BLOCK
                | Self::ASTC_5X5_SRGB_BLOCK
                | Self::ASTC_6X5_UNORM_BLOCK
                | Self::ASTC_6X5_SRGB_BLOCK
                | Self::ASTC_6X6_UNORM_BLOCK
                | Self::ASTC_6X6_SRGB_BLOCK
                | Self::ASTC_8X5_UNORM_BLOCK
                | Self::ASTC_8X5_SRGB_BLOCK
                | Self::ASTC_8X6_UNORM_BLOCK
                | Self::ASTC_8X6_SRGB_BLOCK
                | Self::ASTC_8X8_UNORM_BLOCK
                | Self::ASTC_8X8_SRGB_BLOCK
                | Self::ASTC_10X5_UNORM_BLOCK
                | Self::ASTC_10X5_SRGB_BLOCK
                | Self::ASTC_10X6_UNORM_BLOCK
                | Self::ASTC_10X6_SRGB_BLOCK
                | Self::ASTC_10X8_UNORM_BLOCK
                | Self::ASTC_10X8_SRGB_BLOCK
                | Self::ASTC_10X10_UNORM_BLOCK
                | Self::ASTC_10X10_SRGB_BLOCK
                | Self::ASTC_12X10_UNORM_BLOCK
                | Self::ASTC_12X10_SRGB_BLOCK
                | Self::ASTC_12X12_UNORM_BLOCK
                | Self::ASTC_12X12_SRGB_BLOCK
        )
    }

    #[allow(clippy::match_same_arms)]
    pub fn block_or_pixel_size_in_bytes(self) -> u32 {
        match self {
            Format::UNDEFINED => unreachable!(),

            // Pixel-based
            Format::R4G4_UNORM_PACK8 => 1,
            Format::R4G4B4A4_UNORM_PACK16 => 2,
            Format::B4G4R4A4_UNORM_PACK16 => 2,
            Format::R5G6B5_UNORM_PACK16 => 2,
            Format::B5G6R5_UNORM_PACK16 => 2,
            Format::R5G5B5A1_UNORM_PACK16 => 2,
            Format::B5G5R5A1_UNORM_PACK16 => 2,
            Format::A1R5G5B5_UNORM_PACK16 => 2,
            Format::R8_UNORM => 1,
            Format::R8_SNORM => 1,
            Format::R8_USCALED => 1,
            Format::R8_SSCALED => 1,
            Format::R8_UINT => 1,
            Format::R8_SINT => 1,
            Format::R8_SRGB => 1,
            Format::R8G8_UNORM => 2,
            Format::R8G8_SNORM => 2,
            Format::R8G8_USCALED => 2,
            Format::R8G8_SSCALED => 2,
            Format::R8G8_UINT => 2,
            Format::R8G8_SINT => 2,
            Format::R8G8_SRGB => 2,
            Format::R8G8B8_UNORM => 3,
            Format::R8G8B8_SNORM => 3,
            Format::R8G8B8_USCALED => 3,
            Format::R8G8B8_SSCALED => 3,
            Format::R8G8B8_UINT => 3,
            Format::R8G8B8_SINT => 3,
            Format::R8G8B8_SRGB => 3,
            Format::B8G8R8_UNORM => 3,
            Format::B8G8R8_SNORM => 3,
            Format::B8G8R8_USCALED => 3,
            Format::B8G8R8_SSCALED => 3,
            Format::B8G8R8_UINT => 3,
            Format::B8G8R8_SINT => 3,
            Format::B8G8R8_SRGB => 3,
            Format::R8G8B8A8_UNORM => 4,
            Format::R8G8B8A8_SNORM => 4,
            Format::R8G8B8A8_USCALED => 4,
            Format::R8G8B8A8_SSCALED => 4,
            Format::R8G8B8A8_UINT => 4,
            Format::R8G8B8A8_SINT => 4,
            Format::R8G8B8A8_SRGB => 4,
            Format::B8G8R8A8_UNORM => 4,
            Format::B8G8R8A8_SNORM => 4,
            Format::B8G8R8A8_USCALED => 4,
            Format::B8G8R8A8_SSCALED => 4,
            Format::B8G8R8A8_UINT => 4,
            Format::B8G8R8A8_SINT => 4,
            Format::B8G8R8A8_SRGB => 4,
            Format::A8B8G8R8_UNORM_PACK32 => 4,
            Format::A8B8G8R8_SNORM_PACK32 => 4,
            Format::A8B8G8R8_USCALED_PACK32 => 4,
            Format::A8B8G8R8_SSCALED_PACK32 => 4,
            Format::A8B8G8R8_UINT_PACK32 => 4,
            Format::A8B8G8R8_SINT_PACK32 => 4,
            Format::A8B8G8R8_SRGB_PACK32 => 4,
            Format::A2R10G10B10_UNORM_PACK32 => 4,
            Format::A2R10G10B10_SNORM_PACK32 => 4,
            Format::A2R10G10B10_USCALED_PACK32 => 4,
            Format::A2R10G10B10_SSCALED_PACK32 => 4,
            Format::A2R10G10B10_UINT_PACK32 => 4,
            Format::A2R10G10B10_SINT_PACK32 => 4,
            Format::A2B10G10R10_UNORM_PACK32 => 4,
            Format::A2B10G10R10_SNORM_PACK32 => 4,
            Format::A2B10G10R10_USCALED_PACK32 => 4,
            Format::A2B10G10R10_SSCALED_PACK32 => 4,
            Format::A2B10G10R10_UINT_PACK32 => 4,
            Format::A2B10G10R10_SINT_PACK32 => 4,
            Format::R16_UNORM => 2,
            Format::R16_SNORM => 2,
            Format::R16_USCALED => 2,
            Format::R16_SSCALED => 2,
            Format::R16_UINT => 2,
            Format::R16_SINT => 2,
            Format::R16_SFLOAT => 2,
            Format::R16G16_UNORM => 4,
            Format::R16G16_SNORM => 4,
            Format::R16G16_USCALED => 4,
            Format::R16G16_SSCALED => 4,
            Format::R16G16_UINT => 4,
            Format::R16G16_SINT => 4,
            Format::R16G16_SFLOAT => 4,
            Format::R16G16B16_UNORM => 6,
            Format::R16G16B16_SNORM => 6,
            Format::R16G16B16_USCALED => 6,
            Format::R16G16B16_SSCALED => 6,
            Format::R16G16B16_UINT => 6,
            Format::R16G16B16_SINT => 6,
            Format::R16G16B16_SFLOAT => 6,
            Format::R16G16B16A16_UNORM => 8,
            Format::R16G16B16A16_SNORM => 8,
            Format::R16G16B16A16_USCALED => 8,
            Format::R16G16B16A16_SSCALED => 8,
            Format::R16G16B16A16_UINT => 8,
            Format::R16G16B16A16_SINT => 8,
            Format::R16G16B16A16_SFLOAT => 8,
            Format::R32_UINT => 4,
            Format::R32_SINT => 4,
            Format::R32_SFLOAT => 4,
            Format::R32G32_UINT => 8,
            Format::R32G32_SINT => 8,
            Format::R32G32_SFLOAT => 8,
            Format::R32G32B32_UINT => 12,
            Format::R32G32B32_SINT => 12,
            Format::R32G32B32_SFLOAT => 12,
            Format::R32G32B32A32_UINT => 16,
            Format::R32G32B32A32_SINT => 16,
            Format::R32G32B32A32_SFLOAT => 16,
            Format::R64_UINT => 8,
            Format::R64_SINT => 8,
            Format::R64_SFLOAT => 8,
            Format::R64G64_UINT => 16,
            Format::R64G64_SINT => 16,
            Format::R64G64_SFLOAT => 16,
            Format::R64G64B64_UINT => 24,
            Format::R64G64B64_SINT => 24,
            Format::R64G64B64_SFLOAT => 24,
            Format::R64G64B64A64_UINT => 32,
            Format::R64G64B64A64_SINT => 32,
            Format::R64G64B64A64_SFLOAT => 32,
            Format::B10G11R11_UFLOAT_PACK32 => 4,
            Format::E5B9G9R9_UFLOAT_PACK32 => 4,
            Format::D16_UNORM => 2,
            Format::X8_D24_UNORM_PACK32 => 4,
            Format::D32_SFLOAT => 4,
            Format::S8_UINT => 1,
            Format::D16_UNORM_S8_UINT => 3,
            Format::D24_UNORM_S8_UINT => 4,
            Format::D32_SFLOAT_S8_UINT => 5,

            // Block-based
            Format::BC1_RGB_UNORM_BLOCK => 8,
            Format::BC1_RGB_SRGB_BLOCK => 8,
            Format::BC1_RGBA_UNORM_BLOCK => 8,
            Format::BC1_RGBA_SRGB_BLOCK => 8,
            Format::BC2_UNORM_BLOCK => 16,
            Format::BC2_SRGB_BLOCK => 16,
            Format::BC3_UNORM_BLOCK => 16,
            Format::BC3_SRGB_BLOCK => 16,
            Format::BC4_UNORM_BLOCK => 8,
            Format::BC4_SNORM_BLOCK => 8,
            Format::BC5_UNORM_BLOCK => 16,
            Format::BC5_SNORM_BLOCK => 16,
            Format::BC6H_UFLOAT_BLOCK => 16,
            Format::BC6H_SFLOAT_BLOCK => 16,
            Format::BC7_UNORM_BLOCK => 16,
            Format::BC7_SRGB_BLOCK => 16,
            Format::ETC2_R8G8B8_UNORM_BLOCK => 8,
            Format::ETC2_R8G8B8_SRGB_BLOCK => 8,
            Format::ETC2_R8G8B8A1_UNORM_BLOCK => 8,
            Format::ETC2_R8G8B8A1_SRGB_BLOCK => 8,
            Format::ETC2_R8G8B8A8_UNORM_BLOCK => 8,
            Format::ETC2_R8G8B8A8_SRGB_BLOCK => 8,
            Format::EAC_R11_UNORM_BLOCK => 8,
            Format::EAC_R11_SNORM_BLOCK => 8,
            Format::EAC_R11G11_UNORM_BLOCK => 8,
            Format::EAC_R11G11_SNORM_BLOCK => 8,
            Format::ASTC_4X4_UNORM_BLOCK => 16,
            Format::ASTC_4X4_SRGB_BLOCK => 16,
            Format::ASTC_5X4_UNORM_BLOCK => 16,
            Format::ASTC_5X4_SRGB_BLOCK => 16,
            Format::ASTC_5X5_UNORM_BLOCK => 16,
            Format::ASTC_5X5_SRGB_BLOCK => 16,
            Format::ASTC_6X5_UNORM_BLOCK => 16,
            Format::ASTC_6X5_SRGB_BLOCK => 16,
            Format::ASTC_6X6_UNORM_BLOCK => 16,
            Format::ASTC_6X6_SRGB_BLOCK => 16,
            Format::ASTC_8X5_UNORM_BLOCK => 16,
            Format::ASTC_8X5_SRGB_BLOCK => 16,
            Format::ASTC_8X6_UNORM_BLOCK => 16,
            Format::ASTC_8X6_SRGB_BLOCK => 16,
            Format::ASTC_8X8_UNORM_BLOCK => 16,
            Format::ASTC_8X8_SRGB_BLOCK => 16,
            Format::ASTC_10X5_UNORM_BLOCK => 16,
            Format::ASTC_10X5_SRGB_BLOCK => 16,
            Format::ASTC_10X6_UNORM_BLOCK => 16,
            Format::ASTC_10X6_SRGB_BLOCK => 16,
            Format::ASTC_10X8_UNORM_BLOCK => 16,
            Format::ASTC_10X8_SRGB_BLOCK => 16,
            Format::ASTC_10X10_UNORM_BLOCK => 16,
            Format::ASTC_10X10_SRGB_BLOCK => 16,
            Format::ASTC_12X10_UNORM_BLOCK => 16,
            Format::ASTC_12X10_SRGB_BLOCK => 16,
            Format::ASTC_12X12_UNORM_BLOCK => 16,
            Format::ASTC_12X12_SRGB_BLOCK => 16,
        }
    }

    #[allow(clippy::match_same_arms)]
    pub fn block_width_in_pixels(self) -> u32 {
        match self {
            Format::UNDEFINED => unreachable!(),

            Format::BC1_RGB_UNORM_BLOCK => 4,
            Format::BC1_RGB_SRGB_BLOCK => 4,
            Format::BC1_RGBA_UNORM_BLOCK => 4,
            Format::BC1_RGBA_SRGB_BLOCK => 4,
            Format::BC2_UNORM_BLOCK => 4,
            Format::BC2_SRGB_BLOCK => 4,
            Format::BC3_UNORM_BLOCK => 4,
            Format::BC3_SRGB_BLOCK => 4,
            Format::BC4_UNORM_BLOCK => 4,
            Format::BC4_SNORM_BLOCK => 4,
            Format::BC5_UNORM_BLOCK => 4,
            Format::BC5_SNORM_BLOCK => 4,
            Format::BC6H_UFLOAT_BLOCK => 4,
            Format::BC6H_SFLOAT_BLOCK => 4,
            Format::BC7_UNORM_BLOCK => 4,
            Format::BC7_SRGB_BLOCK => 4,
            Format::ETC2_R8G8B8_UNORM_BLOCK => 4,
            Format::ETC2_R8G8B8_SRGB_BLOCK => 4,
            Format::ETC2_R8G8B8A1_UNORM_BLOCK => 4,
            Format::ETC2_R8G8B8A1_SRGB_BLOCK => 4,
            Format::ETC2_R8G8B8A8_UNORM_BLOCK => 4,
            Format::ETC2_R8G8B8A8_SRGB_BLOCK => 4,
            Format::EAC_R11_UNORM_BLOCK => 4,
            Format::EAC_R11_SNORM_BLOCK => 4,
            Format::EAC_R11G11_UNORM_BLOCK => 4,
            Format::EAC_R11G11_SNORM_BLOCK => 4,
            Format::ASTC_4X4_UNORM_BLOCK => 4,
            Format::ASTC_4X4_SRGB_BLOCK => 4,
            Format::ASTC_5X4_UNORM_BLOCK => 5,
            Format::ASTC_5X4_SRGB_BLOCK => 5,
            Format::ASTC_5X5_UNORM_BLOCK => 5,
            Format::ASTC_5X5_SRGB_BLOCK => 5,
            Format::ASTC_6X5_UNORM_BLOCK => 6,
            Format::ASTC_6X5_SRGB_BLOCK => 6,
            Format::ASTC_6X6_UNORM_BLOCK => 6,
            Format::ASTC_6X6_SRGB_BLOCK => 6,
            Format::ASTC_8X5_UNORM_BLOCK => 8,
            Format::ASTC_8X5_SRGB_BLOCK => 8,
            Format::ASTC_8X6_UNORM_BLOCK => 8,
            Format::ASTC_8X6_SRGB_BLOCK => 8,
            Format::ASTC_8X8_UNORM_BLOCK => 8,
            Format::ASTC_8X8_SRGB_BLOCK => 8,
            Format::ASTC_10X5_UNORM_BLOCK => 10,
            Format::ASTC_10X5_SRGB_BLOCK => 10,
            Format::ASTC_10X6_UNORM_BLOCK => 10,
            Format::ASTC_10X6_SRGB_BLOCK => 10,
            Format::ASTC_10X8_UNORM_BLOCK => 10,
            Format::ASTC_10X8_SRGB_BLOCK => 10,
            Format::ASTC_10X10_UNORM_BLOCK => 10,
            Format::ASTC_10X10_SRGB_BLOCK => 10,
            Format::ASTC_12X10_UNORM_BLOCK => 12,
            Format::ASTC_12X10_SRGB_BLOCK => 12,
            Format::ASTC_12X12_UNORM_BLOCK => 12,
            Format::ASTC_12X12_SRGB_BLOCK => 12,

            _ => 1,
        }
    }

    #[allow(clippy::match_same_arms)]
    pub fn block_height_in_pixels(self) -> u32 {
        match self {
            Format::UNDEFINED => unreachable!(),

            Format::BC1_RGB_UNORM_BLOCK => 4,
            Format::BC1_RGB_SRGB_BLOCK => 4,
            Format::BC1_RGBA_UNORM_BLOCK => 4,
            Format::BC1_RGBA_SRGB_BLOCK => 4,
            Format::BC2_UNORM_BLOCK => 4,
            Format::BC2_SRGB_BLOCK => 4,
            Format::BC3_UNORM_BLOCK => 4,
            Format::BC3_SRGB_BLOCK => 4,
            Format::BC4_UNORM_BLOCK => 4,
            Format::BC4_SNORM_BLOCK => 4,
            Format::BC5_UNORM_BLOCK => 4,
            Format::BC5_SNORM_BLOCK => 4,
            Format::BC6H_UFLOAT_BLOCK => 4,
            Format::BC6H_SFLOAT_BLOCK => 4,
            Format::BC7_UNORM_BLOCK => 4,
            Format::BC7_SRGB_BLOCK => 4,
            Format::ETC2_R8G8B8_UNORM_BLOCK => 4,
            Format::ETC2_R8G8B8_SRGB_BLOCK => 4,
            Format::ETC2_R8G8B8A1_UNORM_BLOCK => 4,
            Format::ETC2_R8G8B8A1_SRGB_BLOCK => 4,
            Format::ETC2_R8G8B8A8_UNORM_BLOCK => 4,
            Format::ETC2_R8G8B8A8_SRGB_BLOCK => 4,
            Format::EAC_R11_UNORM_BLOCK => 4,
            Format::EAC_R11_SNORM_BLOCK => 4,
            Format::EAC_R11G11_UNORM_BLOCK => 4,
            Format::EAC_R11G11_SNORM_BLOCK => 4,
            Format::ASTC_4X4_UNORM_BLOCK => 4,
            Format::ASTC_4X4_SRGB_BLOCK => 4,
            Format::ASTC_5X4_UNORM_BLOCK => 4,
            Format::ASTC_5X4_SRGB_BLOCK => 4,
            Format::ASTC_5X5_UNORM_BLOCK => 5,
            Format::ASTC_5X5_SRGB_BLOCK => 5,
            Format::ASTC_6X5_UNORM_BLOCK => 5,
            Format::ASTC_6X5_SRGB_BLOCK => 5,
            Format::ASTC_6X6_UNORM_BLOCK => 6,
            Format::ASTC_6X6_SRGB_BLOCK => 6,
            Format::ASTC_8X5_UNORM_BLOCK => 5,
            Format::ASTC_8X5_SRGB_BLOCK => 5,
            Format::ASTC_8X6_UNORM_BLOCK => 6,
            Format::ASTC_8X6_SRGB_BLOCK => 6,
            Format::ASTC_8X8_UNORM_BLOCK => 8,
            Format::ASTC_8X8_SRGB_BLOCK => 8,
            Format::ASTC_10X5_UNORM_BLOCK => 5,
            Format::ASTC_10X5_SRGB_BLOCK => 5,
            Format::ASTC_10X6_UNORM_BLOCK => 6,
            Format::ASTC_10X6_SRGB_BLOCK => 6,
            Format::ASTC_10X8_UNORM_BLOCK => 8,
            Format::ASTC_10X8_SRGB_BLOCK => 8,
            Format::ASTC_10X10_UNORM_BLOCK => 10,
            Format::ASTC_10X10_SRGB_BLOCK => 10,
            Format::ASTC_12X10_UNORM_BLOCK => 10,
            Format::ASTC_12X10_SRGB_BLOCK => 10,
            Format::ASTC_12X12_UNORM_BLOCK => 12,
            Format::ASTC_12X12_SRGB_BLOCK => 12,
            _ => 1,
        }
    }

    #[allow(clippy::match_same_arms)]
    pub fn channel_count(self) -> u32 {
        match self {
            Format::UNDEFINED => unreachable!(),

            // Pixel-based
            Format::R4G4_UNORM_PACK8 => 2,
            Format::R4G4B4A4_UNORM_PACK16 => 4,
            Format::B4G4R4A4_UNORM_PACK16 => 4,
            Format::R5G6B5_UNORM_PACK16 => 3,
            Format::B5G6R5_UNORM_PACK16 => 3,
            Format::R5G5B5A1_UNORM_PACK16 => 4,
            Format::B5G5R5A1_UNORM_PACK16 => 4,
            Format::A1R5G5B5_UNORM_PACK16 => 4,
            Format::R8_UNORM => 1,
            Format::R8_SNORM => 1,
            Format::R8_USCALED => 1,
            Format::R8_SSCALED => 1,
            Format::R8_UINT => 1,
            Format::R8_SINT => 1,
            Format::R8_SRGB => 1,
            Format::R8G8_UNORM => 2,
            Format::R8G8_SNORM => 2,
            Format::R8G8_USCALED => 2,
            Format::R8G8_SSCALED => 2,
            Format::R8G8_UINT => 2,
            Format::R8G8_SINT => 2,
            Format::R8G8_SRGB => 2,
            Format::R8G8B8_UNORM => 3,
            Format::R8G8B8_SNORM => 3,
            Format::R8G8B8_USCALED => 3,
            Format::R8G8B8_SSCALED => 3,
            Format::R8G8B8_UINT => 3,
            Format::R8G8B8_SINT => 3,
            Format::R8G8B8_SRGB => 3,
            Format::B8G8R8_UNORM => 3,
            Format::B8G8R8_SNORM => 3,
            Format::B8G8R8_USCALED => 3,
            Format::B8G8R8_SSCALED => 3,
            Format::B8G8R8_UINT => 3,
            Format::B8G8R8_SINT => 3,
            Format::B8G8R8_SRGB => 3,
            Format::R8G8B8A8_UNORM => 4,
            Format::R8G8B8A8_SNORM => 4,
            Format::R8G8B8A8_USCALED => 4,
            Format::R8G8B8A8_SSCALED => 4,
            Format::R8G8B8A8_UINT => 4,
            Format::R8G8B8A8_SINT => 4,
            Format::R8G8B8A8_SRGB => 4,
            Format::B8G8R8A8_UNORM => 4,
            Format::B8G8R8A8_SNORM => 4,
            Format::B8G8R8A8_USCALED => 4,
            Format::B8G8R8A8_SSCALED => 4,
            Format::B8G8R8A8_UINT => 4,
            Format::B8G8R8A8_SINT => 4,
            Format::B8G8R8A8_SRGB => 4,
            Format::A8B8G8R8_UNORM_PACK32 => 4,
            Format::A8B8G8R8_SNORM_PACK32 => 4,
            Format::A8B8G8R8_USCALED_PACK32 => 4,
            Format::A8B8G8R8_SSCALED_PACK32 => 4,
            Format::A8B8G8R8_UINT_PACK32 => 4,
            Format::A8B8G8R8_SINT_PACK32 => 4,
            Format::A8B8G8R8_SRGB_PACK32 => 4,
            Format::A2R10G10B10_UNORM_PACK32 => 4,
            Format::A2R10G10B10_SNORM_PACK32 => 4,
            Format::A2R10G10B10_USCALED_PACK32 => 4,
            Format::A2R10G10B10_SSCALED_PACK32 => 4,
            Format::A2R10G10B10_UINT_PACK32 => 4,
            Format::A2R10G10B10_SINT_PACK32 => 4,
            Format::A2B10G10R10_UNORM_PACK32 => 4,
            Format::A2B10G10R10_SNORM_PACK32 => 4,
            Format::A2B10G10R10_USCALED_PACK32 => 4,
            Format::A2B10G10R10_SSCALED_PACK32 => 4,
            Format::A2B10G10R10_UINT_PACK32 => 4,
            Format::A2B10G10R10_SINT_PACK32 => 4,
            Format::R16_UNORM => 1,
            Format::R16_SNORM => 1,
            Format::R16_USCALED => 1,
            Format::R16_SSCALED => 1,
            Format::R16_UINT => 1,
            Format::R16_SINT => 1,
            Format::R16_SFLOAT => 1,
            Format::R16G16_UNORM => 2,
            Format::R16G16_SNORM => 2,
            Format::R16G16_USCALED => 2,
            Format::R16G16_SSCALED => 2,
            Format::R16G16_UINT => 2,
            Format::R16G16_SINT => 2,
            Format::R16G16_SFLOAT => 2,
            Format::R16G16B16_UNORM => 3,
            Format::R16G16B16_SNORM => 3,
            Format::R16G16B16_USCALED => 3,
            Format::R16G16B16_SSCALED => 3,
            Format::R16G16B16_UINT => 3,
            Format::R16G16B16_SINT => 3,
            Format::R16G16B16_SFLOAT => 3,
            Format::R16G16B16A16_UNORM => 4,
            Format::R16G16B16A16_SNORM => 4,
            Format::R16G16B16A16_USCALED => 4,
            Format::R16G16B16A16_SSCALED => 4,
            Format::R16G16B16A16_UINT => 4,
            Format::R16G16B16A16_SINT => 4,
            Format::R16G16B16A16_SFLOAT => 4,
            Format::R32_UINT => 1,
            Format::R32_SINT => 1,
            Format::R32_SFLOAT => 1,
            Format::R32G32_UINT => 2,
            Format::R32G32_SINT => 2,
            Format::R32G32_SFLOAT => 2,
            Format::R32G32B32_UINT => 3,
            Format::R32G32B32_SINT => 3,
            Format::R32G32B32_SFLOAT => 3,
            Format::R32G32B32A32_UINT => 4,
            Format::R32G32B32A32_SINT => 4,
            Format::R32G32B32A32_SFLOAT => 4,
            Format::R64_UINT => 1,
            Format::R64_SINT => 1,
            Format::R64_SFLOAT => 1,
            Format::R64G64_UINT => 2,
            Format::R64G64_SINT => 2,
            Format::R64G64_SFLOAT => 2,
            Format::R64G64B64_UINT => 3,
            Format::R64G64B64_SINT => 3,
            Format::R64G64B64_SFLOAT => 3,
            Format::R64G64B64A64_UINT => 4,
            Format::R64G64B64A64_SINT => 4,
            Format::R64G64B64A64_SFLOAT => 4,
            Format::B10G11R11_UFLOAT_PACK32 => 3,
            Format::E5B9G9R9_UFLOAT_PACK32 => 4,
            Format::D16_UNORM => 1,
            Format::X8_D24_UNORM_PACK32 => 2,
            Format::D32_SFLOAT => 1,
            Format::S8_UINT => 1,
            Format::D16_UNORM_S8_UINT => 2,
            Format::D24_UNORM_S8_UINT => 2,
            Format::D32_SFLOAT_S8_UINT => 2,

            // Block-based
            Format::BC1_RGB_UNORM_BLOCK => 3,
            Format::BC1_RGB_SRGB_BLOCK => 3,
            Format::BC1_RGBA_UNORM_BLOCK => 4,
            Format::BC1_RGBA_SRGB_BLOCK => 4,
            Format::BC2_UNORM_BLOCK => 4,
            Format::BC2_SRGB_BLOCK => 4,
            Format::BC3_UNORM_BLOCK => 4,
            Format::BC3_SRGB_BLOCK => 4,
            Format::BC4_UNORM_BLOCK => 1,
            Format::BC4_SNORM_BLOCK => 1,
            Format::BC5_UNORM_BLOCK => 2,
            Format::BC5_SNORM_BLOCK => 2,
            Format::BC6H_UFLOAT_BLOCK => 3,
            Format::BC6H_SFLOAT_BLOCK => 3,
            Format::BC7_UNORM_BLOCK => 4,
            Format::BC7_SRGB_BLOCK => 4,
            Format::ETC2_R8G8B8_UNORM_BLOCK => 3,
            Format::ETC2_R8G8B8_SRGB_BLOCK => 3,
            Format::ETC2_R8G8B8A1_UNORM_BLOCK => 4,
            Format::ETC2_R8G8B8A1_SRGB_BLOCK => 4,
            Format::ETC2_R8G8B8A8_UNORM_BLOCK => 4,
            Format::ETC2_R8G8B8A8_SRGB_BLOCK => 4,
            Format::EAC_R11_UNORM_BLOCK => 1,
            Format::EAC_R11_SNORM_BLOCK => 1,
            Format::EAC_R11G11_UNORM_BLOCK => 2,
            Format::EAC_R11G11_SNORM_BLOCK => 2,
            Format::ASTC_4X4_UNORM_BLOCK => 4,
            Format::ASTC_4X4_SRGB_BLOCK => 4,
            Format::ASTC_5X4_UNORM_BLOCK => 4,
            Format::ASTC_5X4_SRGB_BLOCK => 4,
            Format::ASTC_5X5_UNORM_BLOCK => 4,
            Format::ASTC_5X5_SRGB_BLOCK => 4,
            Format::ASTC_6X5_UNORM_BLOCK => 4,
            Format::ASTC_6X5_SRGB_BLOCK => 4,
            Format::ASTC_6X6_UNORM_BLOCK => 4,
            Format::ASTC_6X6_SRGB_BLOCK => 4,
            Format::ASTC_8X5_UNORM_BLOCK => 4,
            Format::ASTC_8X5_SRGB_BLOCK => 4,
            Format::ASTC_8X6_UNORM_BLOCK => 4,
            Format::ASTC_8X6_SRGB_BLOCK => 4,
            Format::ASTC_8X8_UNORM_BLOCK => 4,
            Format::ASTC_8X8_SRGB_BLOCK => 4,
            Format::ASTC_10X5_UNORM_BLOCK => 4,
            Format::ASTC_10X5_SRGB_BLOCK => 4,
            Format::ASTC_10X6_UNORM_BLOCK => 4,
            Format::ASTC_10X6_SRGB_BLOCK => 4,
            Format::ASTC_10X8_UNORM_BLOCK => 4,
            Format::ASTC_10X8_SRGB_BLOCK => 4,
            Format::ASTC_10X10_UNORM_BLOCK => 4,
            Format::ASTC_10X10_SRGB_BLOCK => 4,
            Format::ASTC_12X10_UNORM_BLOCK => 4,
            Format::ASTC_12X10_SRGB_BLOCK => 4,
            Format::ASTC_12X12_UNORM_BLOCK => 4,
            Format::ASTC_12X12_SRGB_BLOCK => 4,
        }
    }

    #[allow(clippy::match_same_arms)]
    pub fn is_normalized(self) -> bool {
        match self {
            Format::UNDEFINED => unreachable!(),

            // Pixel-based
            Format::R4G4_UNORM_PACK8 => true,
            Format::R4G4B4A4_UNORM_PACK16 => true,
            Format::B4G4R4A4_UNORM_PACK16 => true,
            Format::R5G6B5_UNORM_PACK16 => true,
            Format::B5G6R5_UNORM_PACK16 => true,
            Format::R5G5B5A1_UNORM_PACK16 => true,
            Format::B5G5R5A1_UNORM_PACK16 => true,
            Format::A1R5G5B5_UNORM_PACK16 => true,
            Format::R8_UNORM => true,
            Format::R8_SNORM => true,
            Format::R8_SRGB => true,
            Format::R8G8_UNORM => true,
            Format::R8G8_SNORM => true,
            Format::R8G8_SRGB => true,
            Format::R8G8B8_UNORM => true,
            Format::R8G8B8_SNORM => true,
            Format::R8G8B8_SRGB => true,
            Format::B8G8R8_UNORM => true,
            Format::B8G8R8_SNORM => true,
            Format::B8G8R8_SRGB => true,
            Format::R8G8B8A8_UNORM => true,
            Format::R8G8B8A8_SNORM => true,
            Format::R8G8B8A8_SRGB => true,
            Format::B8G8R8A8_UNORM => true,
            Format::B8G8R8A8_SNORM => true,
            Format::B8G8R8A8_SRGB => true,
            Format::A8B8G8R8_UNORM_PACK32 => true,
            Format::A8B8G8R8_SNORM_PACK32 => true,
            Format::A8B8G8R8_SRGB_PACK32 => true,
            Format::A2R10G10B10_UNORM_PACK32 => true,
            Format::A2R10G10B10_SNORM_PACK32 => true,
            Format::A2B10G10R10_UNORM_PACK32 => true,
            Format::A2B10G10R10_SNORM_PACK32 => true,
            Format::R16_UNORM => true,
            Format::R16_SNORM => true,
            Format::R16G16_UNORM => true,
            Format::R16G16_SNORM => true,
            Format::R16G16B16_UNORM => true,
            Format::R16G16B16_SNORM => true,
            Format::R16G16B16A16_UNORM => true,
            Format::R16G16B16A16_SNORM => true,
            Format::D16_UNORM => true,
            Format::X8_D24_UNORM_PACK32 => true,
            Format::D16_UNORM_S8_UINT => true,
            Format::D24_UNORM_S8_UINT => true,

            // Block-based
            Format::BC1_RGB_UNORM_BLOCK => true,
            Format::BC1_RGB_SRGB_BLOCK => true,
            Format::BC1_RGBA_UNORM_BLOCK => true,
            Format::BC1_RGBA_SRGB_BLOCK => true,
            Format::BC2_UNORM_BLOCK => true,
            Format::BC2_SRGB_BLOCK => true,
            Format::BC3_UNORM_BLOCK => true,
            Format::BC3_SRGB_BLOCK => true,
            Format::BC4_UNORM_BLOCK => true,
            Format::BC4_SNORM_BLOCK => true,
            Format::BC5_UNORM_BLOCK => true,
            Format::BC5_SNORM_BLOCK => true,
            Format::BC7_UNORM_BLOCK => true,
            Format::BC7_SRGB_BLOCK => true,
            Format::ETC2_R8G8B8_UNORM_BLOCK => true,
            Format::ETC2_R8G8B8_SRGB_BLOCK => true,
            Format::ETC2_R8G8B8A1_UNORM_BLOCK => true,
            Format::ETC2_R8G8B8A1_SRGB_BLOCK => true,
            Format::ETC2_R8G8B8A8_UNORM_BLOCK => true,
            Format::ETC2_R8G8B8A8_SRGB_BLOCK => true,
            Format::EAC_R11_UNORM_BLOCK => true,
            Format::EAC_R11_SNORM_BLOCK => true,
            Format::EAC_R11G11_UNORM_BLOCK => true,
            Format::EAC_R11G11_SNORM_BLOCK => true,
            Format::ASTC_4X4_UNORM_BLOCK => true,
            Format::ASTC_4X4_SRGB_BLOCK => true,
            Format::ASTC_5X4_UNORM_BLOCK => true,
            Format::ASTC_5X4_SRGB_BLOCK => true,
            Format::ASTC_5X5_UNORM_BLOCK => true,
            Format::ASTC_5X5_SRGB_BLOCK => true,
            Format::ASTC_6X5_UNORM_BLOCK => true,
            Format::ASTC_6X5_SRGB_BLOCK => true,
            Format::ASTC_6X6_UNORM_BLOCK => true,
            Format::ASTC_6X6_SRGB_BLOCK => true,
            Format::ASTC_8X5_UNORM_BLOCK => true,
            Format::ASTC_8X5_SRGB_BLOCK => true,
            Format::ASTC_8X6_UNORM_BLOCK => true,
            Format::ASTC_8X6_SRGB_BLOCK => true,
            Format::ASTC_8X8_UNORM_BLOCK => true,
            Format::ASTC_8X8_SRGB_BLOCK => true,
            Format::ASTC_10X5_UNORM_BLOCK => true,
            Format::ASTC_10X5_SRGB_BLOCK => true,
            Format::ASTC_10X6_UNORM_BLOCK => true,
            Format::ASTC_10X6_SRGB_BLOCK => true,
            Format::ASTC_10X8_UNORM_BLOCK => true,
            Format::ASTC_10X8_SRGB_BLOCK => true,
            Format::ASTC_10X10_UNORM_BLOCK => true,
            Format::ASTC_10X10_SRGB_BLOCK => true,
            Format::ASTC_12X10_UNORM_BLOCK => true,
            Format::ASTC_12X10_SRGB_BLOCK => true,
            Format::ASTC_12X12_UNORM_BLOCK => true,
            Format::ASTC_12X12_SRGB_BLOCK => true,

            _ => false,
        }
    }
}

//
// The following represent reasonable defaults with broad hardware support.
// These lists work well with DeviceContext::find_supported_format()
//
pub mod recommended_formats {
    use super::Format;

    // If using an SDR format, consider using the swapchain surface format!
    pub const COLOR_FORMATS_SDR: [Format; 1] = [
        Format::R8G8B8A8_SNORM, // vulkan: 100% coverage with optimal
    ];

    pub const COLOR_FORMATS_HDR: [Format; 1] = [
        Format::R32G32B32A32_SFLOAT, // vulkan: 100% coverage with optimal
    ];

    pub const DEPTH_FORMATS: [Format; 4] = [
        Format::D32_SFLOAT,         // vulkan: 100% coverage with optimal
        Format::D32_SFLOAT_S8_UINT, // vulkan: 100% coverage with optimal
        Format::D24_UNORM_S8_UINT,
        Format::D16_UNORM, // Most likely to be used by GL ES 2.0
    ];
}
