[cargo-new]
name = "Legion Labs"
email = "devs@legionlabs.com"
vcs = "none"

################################################################################

[alias]
md = "run -p lgn-monorepo --bin lgn-monorepo --"
m = "run -q --release -p lgn-monorepo --bin lgn-monorepo --"

# for cases when settings only accept a single word and m clippy, m build wouldn't work
mclippy = "run -q --release -p lgn-monorepo --bin lgn-monorepo -- clippy"
mbuild = "run -q --release -p lgn-monorepo --bin lgn-monorepo -- build"
mtest = "run -q --release -p lgn-monorepo --bin lgn-monorepo -- test"
mdoc = "run -q --release -p lgn-monorepo --bin lgn-monorepo -- doc"
mrun = "run -q --release -p lgn-monorepo --bin lgn-monorepo -- run"
ci = "run -q --release -p lgn-monorepo --bin lgn-monorepo -- ci"

# command used in vs code, to get errors on the initial build of lgn-monorepo
vsclippy = "run -q --message-format=json --release -p lgn-monorepo --bin lgn-monorepo -- clippy"

################################################################################

# To be set if necesseary to enable sanitizers
#[build]
#rustflags = ["-C", "link-args=-fsanitize=address"]

[target.x86_64-pc-windows-msvc]
linker = "rust-lld.exe"

[profile.dev]
panic = 'abort'

[profile.release]
opt-level = 3
debug = true
debug-assertions = false
panic = 'abort'

[profile.bench]
opt-level = 3
debug = true
debug-assertions = false

# this is one of the real time-critical sections of the code
# We want it optimal even even in dev mode
[profile.dev.package.openh264-sys2]
opt-level = 3
debug = true
debug-assertions = false
