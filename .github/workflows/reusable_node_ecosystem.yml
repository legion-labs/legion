name: Rust ecosystem reusable workflow
on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      deploy_editor:
        required: true
        type: boolean
      deploy_analytics:
        required: true
        type: boolean
    secrets:
      editor-deploy-key:
        required: false
      analytics-deploy-key:
        required: false

# TODO: @Kevin: multiple aspects can be improved:
# * Change detection (listing packages than changed)
# * Bootstrapping (not used/tested but something along the of ./node-bootstrap/action.yml)
# * Bootstrap can be called also when releasing the cargo crates since we might depend on npm stuff
# * we can switch to monorepo commands if more commands are necessary, as the idea is always to do
# less in the workflow (hard to debug, iterate, etc.)

jobs:
  check:
    name: Checks and tests
    runs-on: [self-hosted, linux, governance-common, build]
    container:
      image: ${{ inputs.image }}
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Npm install
        run: pnpm install --unsafe-perm

      - name: Npm build (necessary for subsequent commands...)
        run: pnpm build

      - name: Check environment
        run: env

      - name: List types files
        run: ls node_modules/

      - name: Npm check
        run: pnpm check

      - name: Npm test
        run: pnpm test

  build:
    name: Build
    needs: [check]
    runs-on: [self-hosted, linux, governance-common, build]
    container:
      image: ${{ inputs.image }}
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Npm install
        run: pnpm install --unsafe-perm

      - name: Npm build
        env:
          GITHUB_PAGES: "true"
        run: pnpm build

      - name: Upload analytics artifacts
        uses: actions/upload-artifact@v3
        with:
          name: analytics
          path: ./npm-pkgs/lgn-analytics-gui/dist
          retention-days: 5

      - name: Upload editor artifacts
        uses: actions/upload-artifact@v3
        with:
          name: editor
          path: ./npm-pkgs/lgn-editor-gui/dist
          retention-days: 5

  deploy_editor:
    name: Deployment
    needs: [build]
    if: ${{ inputs.deploy_editor }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: editor
          path: ./editor

      - name: Deploy Analytics
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.editor-deploy-key }}
          external_repository: legion-labs/editor.legionengine.com
          publish_branch: main
          publish_dir: ./editor
          force_orphan: true
          cname: editor.legionengine.com

  deploy_analytics:
    name: Deployment
    needs: [build]
    if: ${{ inputs.deploy_analytics }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: analytics
          path: ./analytics

      - name: Deploy Analytics
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.analytics-deploy-key }}
          external_repository: legion-labs/analytics.legionengine.com
          publish_branch: main
          publish_dir: ./analytics
          force_orphan: true
          cname: analytics.legionengine.com