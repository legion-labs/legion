name: Change Detection
on:
  workflow_call:
    inputs:
      base_ref:
        required: true
        type: string
      image:
        required: true
        type: string
    secrets:
      ecr-password:
        required: true
    outputs:
      linux_runner:
        description: "The base git ref to use"
        value: ${{ jobs.change_detection.outputs.linux_runner }}
      windows_runner:
        description: "The base git ref to use"
        value: ${{ jobs.change_detection.outputs.windows_runner }}
      docs:
        description: "The base git ref to use"
        value: ${{ jobs.change_detection.outputs.docs }}
      npm_pkgs:
        description: "The base git ref to use"
        value: ${{ jobs.change_detection.outputs.npm_pkgs }}
      cargo_pkgs:
        description: "The base git ref to use"
        value: ${{ jobs.change_detection.outputs.cargo_pkgs }}
      cargo_pkgs_args:
        description: "The base git ref to use"
        value: ${{ jobs.change_detection.outputs.cargo_pkgs_args }}

jobs:
  change_detection:
    name: Runner selection
    runs-on: [self-hosted, linux, common, build]
    container:
      image: ${{ inputs.image }}
      credentials:
        username: AWS
        password: ${{ secrets.ecr-password }}
    outputs:
      linux_runner: ${{ steps.change-since.outputs.linux_runner }}
      windows_runner: ${{ steps.change-since.outputs.windows_runner }}
      docs: ${{ steps.change-since.outputs.docs }}
      npm_pkgs: ${{ steps.change-since.outputs.npm_pkgs }}
      cargo_pkgs: ${{ steps.change-since.outputs.cargo_pkgs }}
      cargo_pkgs_args: ${{ steps.change-since.outputs.cargo_pkgs_args }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Bootstrap
        uses: ./.github/actions/bootstrap

      - name: Test changed crates
        id: change-since
        shell: bash
        run: |
          changed=$(cargo m changed-since "${{ inputs.base_ref }}" --format=json)
          if [[ $? != 0 ]]; then
            echo "failed to detect changed crates"
            exit 1
          fi
          echo "::set-output name=docs::$(echo $changed | jq '.docs')"
          echo "::set-output name=npm_pkgs::$(echo $changed | jq '.npm_pkgs')"
          cargo_pkgs_args=$(echo $changed | jq --raw-output '.cargo_pkgs|[("-p" + .[])]|join(" ")')
          echo "::set-output name=cargo_pkgs_args::$cargo_pkgs"
          if [[ $cargo_pkgs_args ]]; then
            echo "::set-output name=cargo_pkgs::true"
          else
            echo "::set-output name=cargo_pkgs::false"
          fi
          graphics_cargo_pkgs=$(echo $changed | jq --raw-output '.cargo_pkgs[]|select((.|contains("graphics")) or (.|contains("renderer")))')
          if [[ $graphics_cargo_pkgs ]]; then
            echo "Matched crates: $graphics_cargo_pkgs"
            echo "::set-output name=linux_runner::[[\"self-hosted\",\"linux\",\"gpu\",\"build\"]]"
            echo "::set-output name=windows_runner::[[\"self-hosted\",\"windows\",\"gpu\",\"build\"]]"
          else
            echo "No change impacting a graphics crate was detected"
            echo "::set-output name=linux_runner::[[\"self-hosted\",\"linux\",\"common\",\"build\"]]"
            echo "::set-output name=windows_runner::[[\"self-hosted\",\"windows\",\"common\",\"build\"]]"
          fi
