name: Rust ecosystem reusable workflow
on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      pkgs_arg:
        required: true
        type: string
      deploy:
        required: true
        type: boolean
    secrets:
      ecr-password:
        required: false
      docs-deploy-key:
        required: false

jobs:
  lint:
    name: Running code checks
    runs-on: [self-hosted, linux, common, build]
    container:
      image: ${{ inputs.image }}
      credentials:
        username: AWS
        password: ${{ secrets.ecr-password }}
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc]
    steps:
      - uses: actions/checkout@v2

      - name: Bootstrap
        uses: ./.github/actions/bootstrap

      - name: Run initial checks
        run: cargo m ci ${{ inputs.pkgs_arg }} --target ${{ matrix.target }} check

  test:
    name: Running tests
    needs: [lint]
    runs-on: [self-hosted, linux, common, build]
    container:
      image: ${{ inputs.image }}
      credentials:
        username: AWS
        password: ${{ secrets.ecr-password }}
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc]
    steps:
      - uses: actions/checkout@v2

      - name: Bootstrap
        uses: ./.github/actions/bootstrap

      - name: Build tests
        run: cargo m ci ${{ inputs.pkgs_arg }} --target ${{ matrix.target }} test --build

      - name: Run tests
        if: ${{ matrix.target != 'x86_64-pc-windows-msvc' }}
        run: cargo m ci ${{ inputs.pkgs_arg }} --target ${{ matrix.target }} test --run

      - name: Upload GPU-test diffs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2.3.1
        with:
          name: GPU test diffs
          path: ./tests/graphics-sandbox/diffs

  publish:
    name: Building release binaries
    if: ${{ inputs.deploy }}
    needs: [test]
    runs-on: [self-hosted, linux, common, build]
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc]
    steps:
      - uses: actions/checkout@v2

      - name: Bootstrap
        uses: ./.github/actions/bootstrap

      - name: Build
        env:
          MONOREPO_DOCKER_REGISTRY: ${{ secrets.MONOREPO_DOCKER_REGISTRY }}
        run: cargo m publish --release --force ${{ inputs.pkgs_arg }} --target ${{ matrix.target }}

      - name: Upload Zip artifacts to github
        if: ${{ matrix.target == 'x86_64-pc-windows-msvc' }}
        uses: actions/upload-artifact@v2
        with:
          name: zip-release
          path: |
            ./target/x86_64-pc-windows-msvc/release/zip/
            !./target/x86_64-pc-windows-msvc/release/zip/*.zip
          retention-days: 5

  build_docs:
    name: Building docs
    needs: [lint]
    runs-on: [self-hosted, linux, common, build]
    container:
      image: ${{ inputs.image }}
      credentials:
        username: AWS
        password: ${{ secrets.ecr-password }}
    steps:
      - uses: actions/checkout@v2

      - name: Bootstrap
        uses: ./.github/actions/bootstrap

      - name: Build docs
        run: cargo m doc

      - name: Upload docs
        uses: actions/upload-artifact@v2
        with:
          name: doc
          path: ./target/doc
          retention-days: 5

  deploy_docs:
    name: Deploying docs
    needs: [build_docs]
    if: ${{ inputs.deploy }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: doc
          path: ./doc

      - run: sleep 5

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        continue-on-error: true
        with:
          deploy_key: ${{ secrets.docs-deploy-key }}
          external_repository: legion-labs/api.legionengine.com
          publish_branch: main
          publish_dir: ./doc
          force_orphan: true
          cname: api.legionengine.com
