name: CI - Test

on:
  push:
    paths-ignore:
      - "docs/**"
      - ".github/workflows/ci_book.yml"
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always
  MONOREPO_DOCKER_REGISTRY: 550877636976.dkr.ecr.ca-central-1.amazonaws.com/legion-labs/legion

jobs:
  base_ref_selection:
    name: Selecting base ref
    uses: ./.github/workflows/base_ref_selection.yml
    with:
      caller_event_name: ${{ github.event_name }}

  setup_image:
    name: Setting up image
    uses: ./.github/workflows/build_env_setup.yml
    secrets:
      github-token: ${{ secrets.ECR_GH_ACCESS_TOKEN }}

  change_detection:
    name: Deciding changes
    needs: [base_ref_selection, setup_image]
    uses: ./.github/workflows/change_detection.yml
    with:
      base_ref: ${{ needs.base_ref_selection.outputs.base_ref }}
      image: ${{ needs.setup_image.outputs.image }}
    secrets:
      ecr-password: ${{ secrets.ECR_PASSWORD }}

  lint:
    name: Running code checks
    if: ${{ fromJSON(needs.change_detection.outputs.cargo_pkgs) }}
    needs: [change_detection, setup_image]
    runs-on: [self-hosted, linux, common, build]
    container:
      image: ${{ needs.setup_image.outputs.image }}
      credentials:
        username: AWS
        password: ${{ secrets.ECR_PASSWORD }}
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc]
    env:
      LEGION_TELEMETRY_URL: ${{ secrets.LEGION_TELEMETRY_URL }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Bootstrap
        uses: ./.github/actions/bootstrap

      - name: Run initial checks
        run: cargo m ci ${{ needs.change_detection.outputs.cargo_pkgs_args }} --target ${{ matrix.target }} check

  test:
    name: Running tests
    needs: [lint, setup_image, change_detection]
    if: ${{ fromJSON(needs.change_detection.outputs.cargo_pkgs) }}
    runs-on: [self-hosted, linux, common, build]
    container:
      image: ${{ needs.setup_image.outputs.image }}
      credentials:
        username: AWS
        password: ${{ secrets.ECR_PASSWORD }}
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Bootstrap
        uses: ./.github/actions/bootstrap

      - name: Build tests
        run: cargo m ci ${{ needs.change_detection.outputs.cargo_pkgs_args}} --target ${{ matrix.target }} test --build

      - name: Run tests
        if: ${{ matrix.target }} != 'x86_64-pc-windows-msvc'
        run: cargo m ci ${{ needs.change_detection.outputs.cargo_pkgs_args}} --target ${{ matrix.target }} test --run

      - name: Upload GPU-test diffs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2.3.1
        with:
          name: GPU test diffs
          path: ./tests/graphics-sandbox/diffs

  build_static_websites:
    name: Building static websites
    needs: [setup_image, change_detection]
    if: ${{ fromJSON(needs.change_detection.outputs.npm_pkgs) }}
    runs-on: [self-hosted, linux, common, build]
    container:
      image: ${{ needs.setup_image.outputs.image }}
      credentials:
        username: AWS
        password: ${{ secrets.ECR_PASSWORD }}
    steps:
      - uses: actions/checkout@v2

      - name: Npm install
        run: pnpm install --unsafe-perm

      - name: Npm build
        env:
          GITHUB_PAGES: "true"
        run: pnpm build

      - name: Upload analytics artifacts
        uses: actions/upload-artifact@v2
        with:
          name: analytics
          path: ./crates/lgn-analytics-gui/frontend/dist
          retention-days: 5

      - name: Upload editor artifacts
        uses: actions/upload-artifact@v2
        with:
          name: editor
          path: ./crates/lgn-editor-gui/frontend/dist
          retention-days: 5

  build_book:
    name: Building book
    needs: [base_ref_selection, setup_image, change_detection]
    if: ${{ fromJSON(needs.change_detection.outputs.docs) }}
    runs-on: [self-hosted, linux, common, build]
    container:
      image: ${{ needs.setup_image.outputs.image }}
      credentials:
        username: AWS
        password: ${{ secrets.ECR_PASSWORD }}
    steps:
      - uses: actions/checkout@v2

      - name: Build book
        run: mdbook build ./docs/

      - name: Upload book
        uses: actions/upload-artifact@v2
        with:
          name: book
          path: ./target/book
          retention-days: 5

  build_docs:
    name: Building docs
    needs: [change_detection, setup_image, lint]
    if: ${{ fromJSON(needs.change_detection.outputs.cargo_pkgs) }}
    runs-on: [self-hosted, linux, common, build]
    container:
      image: ${{ needs.setup_image.outputs.image }}
      credentials:
        username: AWS
        password: ${{ secrets.ECR_PASSWORD }}
    steps:
      - uses: actions/checkout@v2

      - name: Bootstrap
        uses: ./.github/actions/bootstrap

      - name: Build docs
        run: cargo m doc

      - name: Upload docs
        uses: actions/upload-artifact@v2
        with:
          name: doc
          path: ./target/doc
          retention-days: 5

  deploy_docs:
    name: Deploying docs
    needs: [build_docs, test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: doc
          path: ./doc

      - run: sleep 5

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        continue-on-error: true
        with:
          deploy_key: ${{ secrets.DOCS_DEPLOY_KEY }}
          external_repository: legion-labs/api.legionengine.com
          publish_branch: main
          publish_dir: ./doc
          force_orphan: true
          cname: api.legionengine.com

  deploy_book:
    name: Deploying book
    needs: [build_book]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: book
          path: ./book

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.BOOK_DEPLOY_KEY }}
          external_repository: legion-labs/book.legionengine.com
          publish_branch: main
          publish_dir: ./book
          force_orphan: true
          cname: book.legionengine.com

  deploy_static_website:
    name: Deploying static websites
    needs: build_static_websites
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - app: analytics
            deploy_key: ANALYTICS_DEPLOY_KEY

          - app: editor
            deploy_key: EDITOR_DEPLOY_KEY
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.app }}
          path: ./${{ matrix.app }}

      - name: Deploy Analytics
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets[matrix.deploy_key] }}
          external_repository: legion-labs/${{ matrix.app }}.legionengine.com
          publish_branch: main
          publish_dir: ./${{ matrix.app }}
          force_orphan: true
          cname: ${{ matrix.app }}.legionengine.com
