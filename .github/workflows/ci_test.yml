name: CI - Test

on:
  push:
    paths-ignore:
      - "docs/**"
      - ".github/workflows/ci_book.yml"
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always
  MONOREPO_DOCKER_REGISTRY: 550877636976.dkr.ecr.ca-central-1.amazonaws.com/legion-labs/legion

jobs:
  base_ref_selection:
    uses: ./.github/workflows/base_ref_selection.yml
    with:
      caller_event_name: ${{ github.event_name }}

  setup_image:
    uses: ./.github/workflows/build_env_setup.yml
    secrets:
      github-token: ${{ secrets.ECR_GH_ACCESS_TOKEN }}

  change_detection:
    needs: [base_ref_selection, setup_image]
    uses: ./.github/workflows/change_detection.yml
    with:
      base_ref: ${{ needs.base_ref_selection.outputs.base_ref }}
      image: ${{ needs.setup_image.outputs.image }}
    secrets:
      ecr-password: ${{ secrets.ECR_PASSWORD }}

  lint:
    name: Running code checks
    needs: base_ref_selection
    runs-on: [self-hosted, linux, common, build]
    env:
      LEGION_TELEMETRY_URL: ${{ secrets.LEGION_TELEMETRY_URL }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Bootstrap
        uses: ./.github/actions/bootstrap

      - name: Print changed crates
        run: cargo m changed-since ${{ needs.base_ref_selection.outputs.base_ref }}

      - name: Run initial checks
        run: cargo m ci --changed-since ${{ needs.base_ref_selection.outputs.base_ref }} check

  test:
    name: Running tests
    needs: [lint, runner_selection, base_ref_selection]
    strategy:
      matrix:
        os:
          [
            "${{ fromJSON(needs.runner_selection.outputs.linux_runner) }}",
            "${{ fromJSON(needs.runner_selection.outputs.windows_runner) }}",
          ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Bootstrap
        uses: ./.github/actions/bootstrap

      - name: Run tests
        run: cargo m ci --changed-since ${{ needs.base_ref_selection.outputs.base_ref }} test

      - name: Upload GPU-test diffs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2.3.1
        with:
          name: GPU test diffs
          path: ./tests/graphics-sandbox/diffs

  build_book:
    name: Building book
    needs: [base_ref_selection, setup_image, change_detection]
    if: ${{ fromJSON(needs.change_detection.outputs.docs) }}
    runs-on: [self-hosted, linux, common, build]
    container:
      image: ${{ needs.setup_image.outputs.image }}
      credentials:
        username: AWS
        password: ${{ secrets.ECR_PASSWORD }}
    steps:
      - uses: actions/checkout@v2

      - name: Build book
        run: mdbook build ./docs/

      - name: Upload book
        uses: actions/upload-artifact@v2
        with:
          name: book
          path: ./target/book
          retention-days: 5

  build_docs:
    name: Building docs
    needs: lint
    runs-on: [self-hosted, linux, common, build]
    steps:
      - uses: actions/checkout@v2

      - name: Bootstrap
        uses: ./.github/actions/bootstrap

      - name: Build docs
        run: cargo m doc

      - name: Upload docs
        uses: actions/upload-artifact@v2
        with:
          name: doc
          path: ./target/doc
          retention-days: 5

  deploy_docs:
    name: Deploying docs
    needs: [build_docs, test]
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: doc
          path: ./doc

      - run: sleep 5

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        continue-on-error: true
        with:
          deploy_key: ${{ secrets.DOCS_DEPLOY_KEY }}
          external_repository: legion-labs/api.legionengine.com
          publish_branch: main
          publish_dir: ./doc
          force_orphan: true
          cname: api.legionengine.com

  ###############################################################################
  runner_selection:
    name: Runner selection
    needs: base_ref_selection
    runs-on: [self-hosted, linux, common, build]
    outputs:
      linux_runner: ${{ steps.changed-crates.outputs.linux_runner }}
      windows_runner: ${{ steps.changed-crates.outputs.windows_runner }}
    env:
      LEGION_TELEMETRY_URL: ${{ secrets.LEGION_TELEMETRY_URL }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Bootstrap
        uses: ./.github/actions/bootstrap

      - name: Test changed crates
        id: changed-crates
        run: |
          echo "::set-output name=linux_runner::[[\"self-hosted\",\"linux\",\"common\",\"build\"]]"
          echo "::set-output name=windows_runner::[[\"self-hosted\",\"windows\",\"common\",\"build\"]]"
