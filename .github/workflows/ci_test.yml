name: CI - Test

on:
  push:
    paths-ignore:
      - "docs/**"
      - ".github/workflows/ci_book.yml"
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Running code checks
    needs: base_ref_selection
    runs-on: [self-hosted, linux, common, build]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Print changed crates
        run: cargo m changed-since ${{ needs.base_ref_selection.outputs.base_ref }}

      - name: Run initial checks
        run: cargo ci check

  test:
    name: Running tests
    needs: [lint, runner_selection]
    strategy:
      matrix:
        os:
          [
            "${{ fromJSON(needs.runner_selection.outputs.linux_runner) }}",
            "${{ fromJSON(needs.runner_selection.outputs.windows_runner) }}",
          ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: cargo ci test

      - name: Upload GPU-test diffs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2.3.1
        with:
          name: GPU test diffs
          path: *_diff.png

  build_docs:
    name: Building docs
    needs: lint
    runs-on: [self-hosted, linux, common, build]
    steps:
      - uses: actions/checkout@v2

      - name: Build docs
        run: cargo m doc

      - name: Upload docs
        uses: actions/upload-artifact@v2
        with:
          name: doc
          path: ./target/doc
          retention-days: 5

  deploy_docs:
    name: Deploying docs
    needs: [build_docs, test]
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: doc
          path: ./doc

      - run: sleep 5

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        continue-on-error: true
        with:
          deploy_key: ${{ secrets.DOCS_DEPLOY_KEY }}
          external_repository: legion-labs/api.legionengine.com
          publish_branch: main
          publish_dir: ./doc
          force_orphan: true
          cname: api.legionengine.com

  ###############################################################################

  base_ref_selection:
    name: Base ref selection
    runs-on: ubuntu-latest
    outputs:
      base_ref: ${{ steps.set-base-ref.outputs.base_ref }}
    steps:
      - name: Set base ref for PRs
        if: github.event_name == 'pull_request'
        run: echo "base_ref=origin/$GITHUB_BASE_REF" >> $GITHUB_ENV

      - name: Retrieve base ref for branch
        id: last-green-commit
        if: github.event_name != 'pull_request'
        uses: actions/github-script@v5
        with:
          result-encoding: string
          script: |
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");
            const { GITHUB_REF_NAME } = process.env
            return github.rest.actions
              .listWorkflowRuns({
                owner,
                repo,
                workflow_id: "ci_test.yml",
                status: "success",
                branch: GITHUB_REF_NAME,
                event: "push",
              })
              .then((res) => {
                return res.data.workflow_runs.length > 0
                    ? res.data.workflow_runs[0].head_commit.id
                    : "HEAD";
              })
      - name: Set base ref for PRs
        if: github.event_name != 'pull_request'
        run: echo "base_ref=${{steps.last-green-commit.outputs.result}}" >> $GITHUB_ENV

      - name: Set base ref
        id: set-base-ref
        run: echo "::set-output name=base_ref::${{ env.base_ref }}"

  runner_selection:
    name: Runner selection
    needs: base_ref_selection
    runs-on: [self-hosted, linux, common, build]
    outputs:
      linux_runner: ${{ steps.changed-crates.outputs.linux_runner }}
      windows_runner: ${{ steps.changed-crates.outputs.windows_runner }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Test changed crates
        id: changed-crates
        run: |
          crates=$(cargo m changed-since "${{ needs.base_ref_selection.outputs.base_ref }}" --matches-any renderer graphics-sandbox)
          if [[ $? != 0 ]]; then
            echo "failed to detect changed crates"
            exit 1
          fi
          if [[ $crates ]]; then
            echo "A change impacting a graphics crate was detected"
            echo "Matched crates: $crates"
            echo "::set-output name=linux_runner::[[\"self-hosted\",\"linux\",\"gpu\",\"build\"]]"
            echo "::set-output name=windows_runner::[[\"self-hosted\",\"windows\",\"gpu\",\"build\"]]"
          else
            echo "No change impacting a graphics crate was detected"
            echo "::set-output name=linux_runner::[[\"self-hosted\",\"linux\",\"common\",\"build\"]]"
            echo "::set-output name=windows_runner::[[\"self-hosted\",\"windows\",\"common\",\"build\"]]"
          fi
