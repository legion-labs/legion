openapi: 3.1.0
info:
  title: "Permission API"
  description: "The OpenAPI specification for the Legion Labs Permission API."
  version: 1.0.0
paths:
  /v1/permissions/:
    get:
      description: List all the permissions that exist in the system.
      operationId: listPermissions
      responses:
        "200":
          description: Ok.
          content:
            application/json:
              schema:
                $ref: "./common.yaml#/schemas/PermissionList"
    post:
      description: Create a new permission.
      operationId: createPermission
      body:
        description: The permission to create.
        schema:
          $ref: "#/components/schemas/NewPermission"
      responses:
        "201":
          description: The permission was created.
          content:
            application/json:
              schema:
                $ref: "./common.yaml#/schemas/Permission"
        "409":
          description: A permission with the same ID already exists.
          content:
            application/json:
              schema:
                $ref: "./common.yaml#/schemas/Permission"
  /v1/permissions/{permission-id}/:
    parameters:
      - $ref: "#/components/parameters/permission_id"
    put:
      description: Update the specified permission.
      operationId: updatePermission
      body:
        description: The permission to update.
        schema:
          $ref: "#/components/schemas/UpdatePermission"
      responses:
        "200":
          description: The permission was updated.
          content:
            application/json:
              schema:
                $ref: "./common.yaml#/schemas/Permission"
        "404":
          description: The permission was not found.
    delete:
      description: Delete the specified permission.
      operationId: deletePermission
      responses:
        "204":
          description: The permission was deleted.
        "404":
          description: The permission was not found.
        "409":
          description: The permission is being used and cannot be deleted at this time.
  /v1/roles/:
    get:
      description: List all the roles that exist in the system.
      operationId: listRoles
      responses:
        "200":
          description: Ok.
          content:
            application/json:
              schema:
                $ref: "./common.yaml#/schemas/RoleList"
    post:
      description: Create a new role.
      operationId: createRole
      body:
        description: The role to create.
        schema:
          $ref: "#/components/schemas/NewRole"
      responses:
        "201":
          description: The role was created.
          content:
            application/json:
              schema:
                $ref: "./common.yaml#/schemas/Role"
        "409":
          description: A role with the same ID already exists.
          content:
            application/json:
              schema:
                $ref: "./common.yaml#/schemas/Role"
  /v1/roles/{role-id}/:
    parameters:
      - $ref: "#/components/parameters/role_id"
    put:
      description: Update the specified role.
      operationId: updateRole
      body:
        description: The role to update.
        schema:
          $ref: "#/components/schemas/UpdateRole"
      responses:
        "200":
          description: The role was updated.
          content:
            application/json:
              schema:
                $ref: "./common.yaml#/schemas/Role"
        "404":
          description: The role was not found.
    delete:
      description: Delete the specified role.
      operationId: deleteRole
      responses:
        "204":
          description: The role was deleted.
        "404":
          description: The role was not found.
        "409":
          description: The role is being used and cannot be deleted at this time.
components:
  parameters:
    permission_id:
      name: permission-id
      in: path
      description: The permission identifier.
      required: true
      schema:
        $ref: "./common.yaml#/schemas/PermissionId"
    role_id:
      name: permission-id
      in: path
      description: The permission identifier.
      required: true
      schema:
        $ref: "./common.yaml#/schemas/PermissionId"
  schemas:
    NewPermission:
      type: object
      description: A new permission to create.
      properties:
        id:
          $ref: "./common.yaml#/schemas/PermissionId"
        description:
          type: string
      required:
        - id
        - description
    UpdatePermission:
      type: object
      description: The new permission values.
      properties:
        description:
          type: string
      required:
        - description
    NewRole:
      type: object
      description: A new role to create.
      properties:
        id:
          $ref: "./common.yaml#/schemas/PermissionId"
        description:
          type: string
      required:
        - id
        - description
    UpdateRole:
      type: object
      description: The new role values.
      properties:
        description:
          type: string
      required:
        - description
