[monorepo]

[cargo-config]

[crate-attributes]
license = "MIT OR Apache-2.0"
exceptions = [
    "lgn-monorepo",
]
[direct-deps]
bans = [{ name = "aaa", suggestion = "use aaa instead" }]

[clippy]
deny = ["warnings"]
warn = [
    "future_incompatible",
    "nonstandard_style",
    "rust_2018_idioms",
    # Rustdoc lints
    "rustdoc::broken_intra_doc_links",
    "rustdoc::missing_crate_level_docs",
    "rustdoc::private_intra_doc_links",
    # Clippy pedantic lints, treat all as warnings by default, add exceptions in allow list below
    "clippy::pedantic",
    # Clippy nursery lints, still under development
    "clippy::debug_assert_with_mut_call",
    "clippy::disallowed_method",
    "clippy::disallowed_type",
    "clippy::fallible_impl_from",
    "clippy::imprecise_flops",
    "clippy::mutex_integer",
    "clippy::path_buf_push_overwrite",
    "clippy::string_lit_as_bytes",
    "clippy::use_self",
    "clippy::useless_transmute",
    # Clippy restriction lints, usually not considered bad, but useful in specific cases
    "clippy::dbg_macro",
    "clippy::exit",
    "clippy::float_cmp_const",
    "clippy::map_err_ignore",
    'clippy::mem_forget',
    "clippy::missing_enforced_import_renames",
    "clippy::rest_pat_in_fully_bound_structs",
    "clippy::string_to_string",
    "clippy::todo",
    "clippy::unimplemented",
    "clippy::verbose_file_reads",
]
allow = [
    # Clippy pedantic exceptions
    "clippy::cast_possible_truncation",
    "clippy::cast_sign_loss",
    "clippy::if_not_else",
    "clippy::items_after_statements",
    "clippy::missing_panics_doc",
    "clippy::module_name_repetitions",
    "clippy::must_use_candidate",
    "clippy::similar_names",
    "clippy::shadow_unrelated",
    "clippy::unreadable_literal",
    "clippy::unseparated_literal_suffix",
]

[[determinator.path-rule]]
globs = [".github/**/*"]
mark-changed = "all"

[[determinator.path-rule]]
globs = [".github/**/*"]
mark-changed = "all"

[grcov.installer]
version = "0.8.2"
