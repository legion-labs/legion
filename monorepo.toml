# cargo tools installation
[cargo.installs]
cargo-deny = { version = "0.11.1" }
grcov = { version = "0.8.6" }
mdbook = { version = "0.4.15" }
wasm-bindgen-cli = { version = "0.2.79" }

[cargo.installs.sccache]
version = "0.2.16-alpha.0"
git = "https://github.com/diem/sccache.git"
rev = "ef50d87a58260c30767520045e242ccdbdb965af"
features = ["s3"]

################################################################################

[cargo.sccache]
bucket = "legionlabs-ci-artefacts"
prefix = "sccache/legion/"
public = false
region = "ca-central-1"
endpoint = "https://s3-ca-central-1.amazonaws.com"
required-cargo-home = { windows = "C:\\Scoop\\user\\persist\\rustup-msvc\\.cargo", linux = "/home/ubuntu/.cargo", macos = "tbd" }
required-git-home = { windows = "C:\\github\\work\\legion\\legion", linux = "/github/work/legion/legion", macos = "tbd" }
envs = []

################################################################################

# dependencies lints
[lints.direct-dependencies]
bans = [
    { name = "clap", version = "2", reason = "use `clap` 3.0 or above, it supports the a derive based api" },
    { name = "structopts", version = "*", reason = "use `clap` 3.0 or above, it supports the a derive based api" },
    { name = "winapi", version = "*", reason = "use `windows` instead, it's Microsoft supported" },
    #{ name = "lazy_static", version = "*", reason = "use once_cell instead, it's gonna be standarized one day" },
    { name = "log", version = "*", reason = "use `lgn-tracing` instead, our logging solution", exceptions = [
        "lgn-tracing",
        "lgn-telemetry-sink",
    ] },
    { name = "tracing", version = "*", reason = "use `lgn-tracing` instead, our tracing solution", exceptions = [
        "lgn-telemetry-sink",
    ] },
]

################################################################################

# crate attributes lints
[lints.crate-attributes]
license-rules = [
    { spdx = "MIT OR Apache-2.0", globs = [
        "crates/*",
        "examples/*",
        "tests/*",
    ] },
]
edition = "2021"

[[lints.crate-attributes.name-rules]]
help = "official crates names must start with lgn-, be lower kebab-case"
pattern = "^(?:lgn-)[a-z0-9-]+$"
globs = ["crates/*", "build/*"]
glob-literal-separator = true

[[lints.crate-attributes.name-rules]]
help = "tests and examples must not start with lgn-, but have to be lower kebab-case"
pattern = "^[a-z0-9-]+$"
negative-pattern = "^(?:lgn-).*$"
globs = ["examples/*", "tests/*"]
glob-literal-separator = true

[[lints.crate-attributes.bins-rules]]
help = "official crates binaries must start with lgn-, be lower kebab-case"
pattern = "^(?:lgn-)[a-z0-9-]+$"
globs = ["crates/*", "build/*"]
glob-literal-separator = true

################################################################################

[vscode]
debugger-type = { windows = "cppvsdbg", linux = "lldb", macos = "lldb" }
compounds = { editor-compound = ["editor-client", "editor-srv"] }
overrides = { lgn-graphics-sandbox = { args = ["--egui"] } }

################################################################################

[rustdoc]
entry-point = "lgn-app"
deny = ["warnings"]
warn = [
    # Rustdoc lints
    "rustdoc::broken_intra_doc_links",
    "rustdoc::missing_crate_level_docs",
    "rustdoc::private_intra_doc_links",
]
allow = []

################################################################################

[clippy]
deny = ["unsafe_code"]
warn = [
    # Rustc lints
    "future_incompatible",
    "nonstandard_style",
    "rust_2018_idioms",
    # Clippy pedantic lints, treat all as warnings by default, add exceptions in allow list below
    "clippy::pedantic",
    # Clippy nursery lints, still under development
    "clippy::debug_assert_with_mut_call",
    "clippy::disallowed_method",
    "clippy::disallowed_type",
    "clippy::empty_line_after_outer_attr",
    "clippy::equatable_if_let",
    "clippy::fallible_impl_from",
    "clippy::imprecise_flops",
    "clippy::mutex_integer",
    "clippy::nonstandard_macro_braces",
    "clippy::path_buf_push_overwrite",
    "clippy::string_lit_as_bytes",
    "clippy::suspicious_operation_groupings",
    "clippy::trailing_empty_array",
    "clippy::trivial_regex",
    "clippy::use_self",
    "clippy::useless_let_if_seq",
    "clippy::useless_transmute",
    # Clippy restriction lints, usually not considered bad, but useful in specific cases
    "clippy::dbg_macro",
    "clippy::exit",
    "clippy::float_cmp_const",
    "clippy::map_err_ignore",
    'clippy::mem_forget',
    "clippy::missing_enforced_import_renames",
    "clippy::rest_pat_in_fully_bound_structs",
    "clippy::string_to_string",
    "clippy::todo",
    "clippy::unimplemented",
    "clippy::verbose_file_reads",
]
allow = [
    # Clippy pedantic exceptions
    "clippy::cast_possible_truncation",
    "clippy::cast_sign_loss",
    "clippy::if_not_else",
    "clippy::items_after_statements",
    "clippy::missing_panics_doc",
    "clippy::module_name_repetitions",
    "clippy::must_use_candidate",
    "clippy::similar_names",
    "clippy::shadow_unrelated",
    "clippy::unreadable_literal",
    "clippy::unseparated_literal_suffix",
    "clippy::too_many_lines",
]

################################################################################

[dist]
bucket = "legionlabs-ci-artefacts"
prefix = "releases/legion/"
region = "ca-central-1"

################################################################################

[[determinator.path-rule]]
globs = [
    ".github/actions/*",
    ".github/workflows/*",
    "rust-toolchain.toml",
    "monorepo.toml",
]
mark-changed = "all"

[[determinator.path-rule]]
globs = [
    ".github/images/*",
    ".github/dependabot.yml",
    ".vscode/*",
    ".clang-format",
    "docs/**/*",
    "build/env/**/*",
    "pnpm-*",
    "deny.toml",
    "Makefile",
    "legion.toml",
    "npm-pkgs/**/*",
    "package.json",
    "trace-*",
    # Ignore *.md documentation
    "*.md",
]
mark-changed = []

[[determinator.package-rule]]
on-affected = ["monorepo"]
mark-changed = "all"

################################################################################

[npm]
package-manager = "pnpm"
include = [
    "npm-pkgs",
    "crates/lgn-web-client",
    "crates/lgn-analytics-gui",
    "crates/lgn-editor-gui",
    "crates/lgn-runtime-gui",
    "crates/lgn-runtime-proto",
    "crates/lgn-editor-proto",
    "crates/lgn-streaming-proto",
    "crates/lgn-telemetry-proto",
    "crates/lgn-source-control-proto",
]

################################################################################

[package-sets]
slow-tests = ["editor-srv"]

################################################################################
