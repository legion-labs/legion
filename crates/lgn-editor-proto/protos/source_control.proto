syntax = "proto3";
package source_control;

service SourceControl {
  rpc InitUploadRawFile(InitUploadRawFileRequest) returns (InitUploadRawFileResponse);
  rpc UploadRawFile(UploadRawFileRequest) returns (stream UploadRawFileResponse);
  rpc CancelUploadRawFile(CancelUploadRawFileRequest) returns (CancelUploadRawFileResponse);

  rpc GetStagedResources(GetStagedResourcesRequest) returns (GetStagedResourcesResponse);
  rpc CommitStagedResources(CommitStagedResourcesRequest) returns (CommitStagedResourcesResponse);
  rpc SyncLatest(SyncLatestResquest) returns (SyncLatestResponse);

  rpc RevertResources(RevertResourcesRequest) returns (RevertResourcesResponse);
  rpc PullAsset(PullAssetRequest) returns (PullAssetResponse);
}

message InitUploadRawFileRequest {
  string name = 1;
  uint64 size = 2;
}

enum UploadStatus {
  STARTED = 0;
  QUEUED = 1;
  REJECTED = 2;
  DONE = 3;
}

message InitUploadRawFileResponse {
  UploadStatus status = 1;
  // Not set if status is REJECTED
  optional string id = 2;
}

message UploadRawFileRequest {
  string id = 1;
  bytes content = 2;
}

message UploadRawFileProgress {
  string id = 1;
  UploadStatus status = 2;
  // Set only if status is STARTED or DONE
  optional float completion = 3;
}

message UploadRawFileResponse {
  oneof response {
    UploadRawFileProgress progress = 1;
    string error = 2;
  }
}

message CancelUploadRawFileRequest {
  string id = 1;
}

message CancelUploadRawFileResponse {
  bool ok = 1;
}

message CommitStagedResourcesRequest {
  string message = 1;
}

message CommitStagedResourcesResponse {}

message SyncLatestResquest {}

message SyncLatestResponse {}

message ResourceDescription {
  string id = 1;
  string path = 2;
  uint32 version = 3;
  string type = 4;
}
message StagedResource {
  ResourceDescription info = 1;
  enum ChangeType {
    Add = 0;
    Edit = 1;
    Delete = 2;
  };
  ChangeType change_type = 2;
}

message GetStagedResourcesRequest {}

message GetStagedResourcesResponse {
  repeated StagedResource entries = 1;
}

message RevertResourcesRequest {
  repeated string ids = 1;
}

message RevertResourcesResponse {}

message PullAssetRequest {
  string id = 1;
}

message PullAssetResponse {
  uint32 size = 1;
  bytes content = 2;
}