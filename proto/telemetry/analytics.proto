syntax = "proto3";
import public "process.proto";
import public "stream.proto";
import public "block.proto";

package analytics;

service PerformanceAnalytics {
    rpc block_spans(BlockSpansRequest) returns (BlockSpansReply);
    rpc process_cumulative_call_graph(ProcessCumulativeCallGraphRequest) returns (CumulativeCallGraphReply);
    rpc find_process(FindProcessRequest) returns (FindProcessReply);
    rpc list_process_children(ListProcessChildrenRequest) returns (ProcessChildrenReply);
    rpc list_process_log_entries(ProcessLogRequest) returns (ProcessLogReply);
    rpc list_process_streams(ListProcessStreamsRequest) returns (ListStreamsReply);
    rpc list_recent_processes(RecentProcessesRequest) returns (ProcessListReply);
    rpc list_stream_blocks(ListStreamBlocksRequest) returns (ListStreamBlocksReply);
}

// find_process
message FindProcessRequest{
    string process_id = 1;
}

message FindProcessReply{
    telemetry.Process process = 1;
}

// list_recent_processes
message RecentProcessesRequest{
}

message ProcessInstance{
    telemetry.Process process_info = 1;
    uint32 nb_cpu_blocks = 2;
    uint32 nb_log_blocks = 3;
    uint32 nb_metric_blocks = 4;
}

message ProcessListReply {
    repeated ProcessInstance processes = 1;
}

// list_process_streams
message ListProcessStreamsRequest{
    string process_id = 1;
}

message ListStreamsReply{
    repeated telemetry.Stream streams = 1;
}

// list_stream_blocks
message ListStreamBlocksRequest{
    string stream_id = 1;
}

message ListStreamBlocksReply{
    repeated telemetry.Block blocks = 1;
}

// block_spans
// Span: represents a function call instance
message Span{
    uint32 scope_hash = 1;
    uint32 depth = 2; // how many function calls are above this one in the thread
    double begin_ms = 3;
    double end_ms = 4;
}

message ScopeDesc{
    string name = 1;
    string filename = 2;
    uint32 line = 3;
    uint32 hash = 4;
}

message BlockSpansRequest{
    telemetry.Process process = 1;
    telemetry.Stream stream = 2;
    string block_id = 3;
}

message BlockSpansReply{
    repeated ScopeDesc scopes = 1;
    repeated Span spans = 2;
    string block_id = 3;
    double begin_ms = 4;
    double end_ms = 5;
    uint32 max_depth = 6;
}

// process_cumulative_call_graph
message ProcessCumulativeCallGraphRequest{
    telemetry.Process process = 1;
    double begin_ms = 2;
    double end_ms = 3;
}

message NodeStats{
    double sum = 1;
    double min = 2;
    double max = 3;
    double avg = 4;
    double median = 5;
    uint64 count = 6;
}

message CallGraphEdge{
    uint32 hash = 1;
    double weight = 2;
}

message CumulativeCallGraphNode{
    uint32 hash = 1;
    NodeStats stats = 2;
    repeated CallGraphEdge callers = 3;
    repeated CallGraphEdge callees = 4;
}

message CumulativeCallGraphReply{
    repeated ScopeDesc scopes = 1;
    repeated CumulativeCallGraphNode nodes = 2;
}

// list_process_log_entries
message ProcessLogRequest{
    telemetry.Process process = 1;
}

message LogEntry{
    double time_ms = 1;
    string msg = 2;
}

message ProcessLogReply{
    repeated LogEntry entries = 1;
}

// list_process_children
message ListProcessChildrenRequest{
    string process_id = 1;
}

message ProcessChildrenReply{
    repeated telemetry.Process processes = 1;
}
